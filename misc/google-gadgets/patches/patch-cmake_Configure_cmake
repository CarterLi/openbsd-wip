$OpenBSD$
--- cmake/Configure.cmake.ports.orig	Wed Jan 27 08:59:13 2010
+++ cmake/Configure.cmake	Sat Oct 15 03:58:05 2011
@@ -138,7 +138,7 @@ SET(sysconfdir "${prefix}/etc")
 
 SET(GGL_MODULE_DIR "${LIB_INSTALL_DIR}/${PRODUCT_NAME}/modules")
 SET(GGL_RESOURCE_DIR "${CMAKE_INSTALL_PREFIX}/share/${PRODUCT_NAME}")
-SET(GGL_LIBEXEC_DIR "${LIB_INSTALL_DIR}/${PRODUCT_NAME}")
+SET(GGL_LIBEXEC_DIR "${EXEC_INSTALL_PREFIX}/libexec/${PRODUCT_NAME}")
 SET(GGL_INCLUDE_DIR "${CMAKE_INSTALL_PREFIX}/include/${PRODUCT_NAME}")
 SET(GGL_SYSDEPS_INCLUDE_DIR "${LIB_INSTALL_DIR}/${PRODUCT_NAME}/include")
 
@@ -245,10 +245,12 @@ ENDIF(HAVE_MMAP)
 # Check necessary libraries.
 
 # Check if libltdl-dev is installed
-FIND_FILE(LTDL ltdl.h)
-IF(NOT LTDL)
+FIND_PATH(LTDL_INCLUDE_DIR ltdl.h)
+FIND_LIBRARY(LTDL_LIBRARY ltdl)
+IF(NOT LTDL_INCLUDE_DIR OR NOT LTDL_LIBRARY)
   MESSAGE(FATAL_ERROR "libltdl development package is needed to build ggl")
-ENDIF(NOT LTDL)
+ENDIF(NOT LTDL_INCLUDE_DIR OR NOT LTDL_LIBRARY)
+INCLUDE_DIRECTORIES(${LTDL_INCLUDE_DIR})
 
 FIND_PACKAGE(ZLIB REQUIRED)
 
@@ -291,12 +293,13 @@ IF(NOT LIBSOUP_FOUND)
   ENDIF(GGL_BUILD_SOUP_XML_HTTP_REQUEST)
 ELSE(NOT LIBSOUP_FOUND)
   GET_CONFIG(libsoup-gnome-2.4 2.26.0 LIBSOUP_GNOME LIBSOUP_GNOME_FOUND)
+  SET(CMAKE_REQUIRED_FLAGS ${LIBSOUP_DEFINITIONS})
+  SET(CMAKE_REQUIRED_INCLUDES ${LIBSOUP_INCLUDE_DIR})
+  SET(CMAKE_REQUIRED_LIBRARIES ${LIBSOUP_LIBRARIES} ${LIBSOUP_LINKER_FLAGS})
+  CHECK_FUNCTION_EXISTS(soup_message_headers_get_one SOUP_MESSAGE_HEADERS_GET_ONE_FOUND)
   IF(LIBSOUP_GNOME_FOUND)
     LIST(APPEND LIBSOUP_DEFINITIONS "-DHAVE_LIBSOUP_GNOME")
   ENDIF(LIBSOUP_GNOME_FOUND)
-  SET(CMAKE_REQUIRED_INCLUDES ${LIBSOUP_INCLUDE_DIR})
-  SET(CMAKE_REQUIRED_LIBRARIES ${LIBSOUP_LIBRARIES})
-  CHECK_FUNCTION_EXISTS(soup_message_headers_get_one SOUP_MESSAGE_HEADERS_GET_ONE_FOUND)
   IF(SOUP_MESSAGE_HEADERS_GET_ONE_FOUND)
     LIST(APPEND LIBSOUP_DEFINITIONS "-DHAVE_SOUP_MESSAGE_HEADERS_GET_ONE")
   ENDIF(SOUP_MESSAGE_HEADERS_GET_ONE_FOUND)
@@ -389,10 +392,11 @@ IF(NOT DBUS_FOUND AND GGL_BUILD_LIBGGADGET_DBUS)
   SET(GGL_BUILD_LIBGGADGET_DBUS 0)
   MESSAGE("Library D-Bus is not available, libggadget-dbus won't be built.")
 ELSE(NOT DBUS_FOUND AND GGL_BUILD_LIBGGADGET_DBUS)
-  LIST(APPEND DBUS_DEFINITIONS "-DHAVE_DBUS_LIBRARY")
+  SET(CMAKE_REQUIRED_FLAGS ${DBUS_DEFINITIONS})
   SET(CMAKE_REQUIRED_INCLUDES ${DBUS_INCLUDE_DIR})
-  SET(CMAKE_REQUIRED_LIBRARIES ${DBUS_LIBRARIES})
+  SET(CMAKE_REQUIRED_LIBRARIES ${DBUS_LIBRARIES} ${DBUS_LINKER_FLAGS})
   CHECK_FUNCTION_EXISTS(dbus_watch_get_unix_fd DBUS_UNIX_FD_FUNC_FOUND)
+  LIST(APPEND DBUS_DEFINITIONS "-DHAVE_DBUS_LIBRARY")
   IF(DBUS_UNIX_FD_FUNC_FOUND)
     LIST(APPEND DBUS_DEFINITIONS "-DHAVE_DBUS_WATCH_GET_UNIX_FD")
   ENDIF(DBUS_UNIX_FD_FUNC_FOUND)
@@ -488,8 +492,7 @@ IF(SMJS_FOUND)
   ENDIF("${RESULT}" STREQUAL "/stable")
 
   SET(CMAKE_REQUIRED_INCLUDES ${SMJS_INCLUDE_DIR})
-  SET(CMAKE_REQUIRED_LIBRARIES ${SMJS_LIBRARIES})
-  SET(CMAKE_REQUIRED_LINK_DIR ${SMJS_LINK_DIR})
+  SET(CMAKE_REQUIRED_LIBRARIES ${SMJS_LIBRARIES} ${SMJS_LINKER_FLAGS})
   SET(CMAKE_REQUIRED_DEFINITIONS ${SMJS_DEFINITIONS})
   CHECK_INCLUDE_FILE(jsversion.h JSVERSION_H_FOUND)
   IF(JSVERSION_H_FOUND)
