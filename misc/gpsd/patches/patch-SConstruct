$OpenBSD$
--- SConstruct.orig	Sat Apr 14 17:36:18 2012
+++ SConstruct	Thu May 10 14:34:06 2012
@@ -220,21 +220,7 @@ env['PYTHON'] = sys.executable
 # settings.
 env['STRIP'] = "strip"
 env['PKG_CONFIG'] = "pkg-config"
-env['CHRPATH'] = 'chrpath'
-for i in ["AR", "ARFLAGS", "CCFLAGS", "CFLAGS", "CC", "CXX", "CXXFLAGS", "STRIP", "PKG_CONFIG", "CHRPATH", "LD", "TAR"]:
-    if os.environ.has_key(i):
-        j = i
-        if i == "LD":
-            i = "SHLINK"
-        if i == "CFLAGS" or i == "CCFLAGS":
-            env.Replace(**{j: Split(os.getenv(i))})
-        else:
-            env.Replace(**{j: os.getenv(i)})
-for flags in ["LDFLAGS", "LINKFLAGS", "SHLINKFLAGS", "CPPFLAGS"]:
-    if os.environ.has_key(flags):
-        env.MergeFlags({flags : [os.getenv(flags)]})
 
-
 # Placeholder so we can kluge together something like VPATH builds.
 # $SRCDIR replaces occurrences for $(srcdir) in the autotools build.
 env['SRCDIR'] = '.'
@@ -389,17 +375,6 @@ config = Configure(env, custom_tests = { 'CheckPKG' : 
                                          'CheckXsltproc' : CheckXsltproc})
 
 env.Prepend(LIBPATH=[os.path.realpath(os.curdir)])
-if config.CheckExecutable('$CHRPATH -v', 'chrpath'):
-    # Tell generated binaries to look in the current directory for
-    # shared libraries so we can run tests without hassle. Should be
-    # handled sanely by scons on all systems.  Not good to use '.' or
-    # a relative path here; it's a security risk.  At install time we
-    # use chrpath to edit this out of RPATH.
-    if env["shared"]:
-        env.Prepend(RPATH=[os.path.realpath(os.curdir)])
-else:
-    print "chrpath is not available, forcing static linking."
-    env["shared"] = False
 
 confdefs = ["/* gpsd_config.h.  Generated by scons, do not hand-hack.  */\n"]
 
@@ -429,7 +404,7 @@ if env['ncurses']:
     elif sys.platform.startswith('freebsd'):
         ncurseslibs= [ '-lncurses' ]
     elif sys.platform.startswith('openbsd'):
-        ncurseslibs= [ '-lcurses' ]
+        ncurseslibs= [ '-lncurses' ]
 
 if env['usb']:
     # In FreeBSD except version 7, USB libraries are in the base system
@@ -959,7 +934,7 @@ else:
             python_objects[ext].append(
                 python_env.NoCache(
                     python_env.SharedObject(
-                        src.split(".")[0] + '-py_' + '_'.join(['%s' %(x) for x in sys.version_info]) + so_ext, src
+                        src.split(".")[0] + so_ext, src
                     )
                 )
             )
@@ -1102,7 +1077,6 @@ python_manpages = {
     "gpscat.1" : "gpscat.xml",
     "xgpsspeed.1" : "gps.xml",
     "xgps.1" : "gps.xml",
-    "gegps.1" : "gps.xml",
     }
 
 manpage_targets = []
@@ -1157,7 +1131,7 @@ if not env['debug'] and not env['profiling'] and env['
 if not env['python']:
     python_install = []
 else:
-    python_lib_dir = sysconfig.get_python_lib(plat_specific=1)
+    python_lib_dir = sysconfig.get_python_lib(plat_specific=1, prefix = env['prefix'])
     python_module_dir = python_lib_dir + os.sep + 'gps'
     python_extensions_install = python_env.Install( DESTDIR + python_module_dir,
                                                     python_built_extensions)
