$OpenBSD$
--- media/video/capture/linux/video_capture_device_factory_linux.cc.orig.port	Wed Jan  7 21:44:05 2015
+++ media/video/capture/linux/video_capture_device_factory_linux.cc	Wed Jan  7 22:27:04 2015
@@ -32,8 +32,7 @@ static bool HasUsableFormats(int fd, uint32 capabiliti
     int capability;
     v4l2_buf_type buf_type;
   } kCapabilityAndBufferTypes[] = {
-    {V4L2_CAP_VIDEO_CAPTURE, V4L2_BUF_TYPE_VIDEO_CAPTURE},
-    {V4L2_CAP_VIDEO_CAPTURE_MPLANE, V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE}
+    {V4L2_CAP_VIDEO_CAPTURE, V4L2_BUF_TYPE_VIDEO_CAPTURE}
   };
 
   for (const auto& capability_and_buffer_type : kCapabilityAndBufferTypes) {
@@ -177,10 +176,8 @@ void VideoCaptureDeviceFactoryLinux::GetDeviceNames(
     // http://crbug.com/139356.
     v4l2_capability cap;
     if ((HANDLE_EINTR(ioctl(fd.get(), VIDIOC_QUERYCAP, &cap)) == 0) &&
-        ((cap.capabilities & V4L2_CAP_VIDEO_CAPTURE ||
-         cap.capabilities & V4L2_CAP_VIDEO_CAPTURE_MPLANE) &&
-         !(cap.capabilities & V4L2_CAP_VIDEO_OUTPUT &&
-         cap.capabilities & V4L2_CAP_VIDEO_OUTPUT_MPLANE)) &&
+        ((cap.capabilities & V4L2_CAP_VIDEO_CAPTURE) &&
+         !(cap.capabilities & V4L2_CAP_VIDEO_OUTPUT)) &&
         HasUsableFormats(fd.get(), cap.capabilities)) {
       VideoCaptureDevice::Name device_name(base::StringPrintf("%s", cap.card),
                                            unique_id);
@@ -200,8 +197,7 @@ void VideoCaptureDeviceFactoryLinux::GetDeviceSupporte
     return;
   supported_formats->clear();
 
-  const v4l2_buf_type kCaptureTypes[] = {V4L2_BUF_TYPE_VIDEO_CAPTURE,
-                                         V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE};
+  const v4l2_buf_type kCaptureTypes[] = {V4L2_BUF_TYPE_VIDEO_CAPTURE};
   for (const auto& buf_type : kCaptureTypes)
     GetSupportedFormatsForV4L2BufferType(fd.get(), buf_type, supported_formats);
   return;
