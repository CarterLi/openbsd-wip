$OpenBSD$

Index: chrome/browser/enterprise/connectors/device_trust/device_trust_service.cc
--- chrome/browser/enterprise/connectors/device_trust/device_trust_service.cc.orig
+++ chrome/browser/enterprise/connectors/device_trust/device_trust_service.cc
@@ -27,7 +27,7 @@ DeviceTrustService::DeviceTrustService(Profile* profil
       signal_report_callback_(
           base::BindOnce(&DeviceTrustService::OnSignalReported,
                          base::Unretained(this))) {
-#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC)
+#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC) || defined(OS_BSD)
   key_pair_ = std::make_unique<DeviceTrustKeyPair>();
 #endif  // defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC)
 
@@ -69,7 +69,7 @@ void DeviceTrustService::OnPolicyUpdated() {
   }
 
   if (!first_report_sent_ && IsEnabled()) {  // Policy enabled for the 1st time.
-#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC)
+#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC) || defined(OS_BSD)
     key_pair_->Init();
 #endif  // defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC)
     reporter_->Init(MakePolicyCheck(),
@@ -91,7 +91,7 @@ void DeviceTrustService::OnReporterInitialized(bool su
 
   DeviceTrustReportEvent report;
 
-#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC)
+#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC) || defined(OS_BSD)
   auto* credential = report.mutable_attestation_credential();
   credential->set_format(
       DeviceTrustReportEvent::Credential::EC_NID_X9_62_PRIME256V1_PUBLIC_DER);
@@ -126,7 +126,7 @@ void DeviceTrustService::SetSignalReportCallbackForTes
       base::Unretained(this), std::move(cb));
 }
 
-#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC)
+#if defined(OS_LINUX) || defined(OS_WIN) || defined(OS_MAC) || defined(OS_BSD)
 std::string DeviceTrustService::GetAttestationCredentialForTesting() const {
   return key_pair_->ExportPEMPublicKey();
 }
