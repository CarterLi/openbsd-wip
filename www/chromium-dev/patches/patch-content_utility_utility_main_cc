$OpenBSD$

Index: content/utility/utility_main.cc
--- content/utility/utility_main.cc.orig
+++ content/utility/utility_main.cc
@@ -29,7 +29,8 @@
 #include "third_party/icu/source/common/unicode/unistr.h"
 #include "third_party/icu/source/i18n/unicode/timezone.h"
 
-#if defined(OS_LINUX) || defined(OS_CHROMEOS)
+#if defined(OS_LINUX) || defined(OS_CHROMEOS) || defined(OS_BSD)
+#if !defined(OS_BSD)
 #include "content/utility/speech/speech_recognition_sandbox_hook_linux.h"
 #if BUILDFLAG(ENABLE_PRINTING)
 #include "printing/sandbox/print_backend_sandbox_hook_linux.h"
@@ -37,7 +38,10 @@
 #include "sandbox/policy/linux/sandbox_linux.h"
 #include "services/audio/audio_sandbox_hook_linux.h"
 #include "services/network/network_sandbox_hook_linux.h"
+#else
+#include "sandbox/policy/openbsd/sandbox_openbsd.h"
 #endif
+#endif
 
 #if BUILDFLAG(IS_CHROMEOS_ASH)
 #include "chromeos/assistant/buildflags.h"
@@ -106,12 +110,13 @@ int UtilityMain(const MainFunctionParams& parameters) 
   if (parameters.command_line.HasSwitch(switches::kUtilityStartupDialog))
     WaitForDebugger("Utility");
 
-#if defined(OS_LINUX) || defined(OS_CHROMEOS)
+#if defined(OS_LINUX) || defined(OS_CHROMEOS) || defined(OS_BSD)
   // Initializes the sandbox before any threads are created.
   // TODO(jorgelo): move this after GTK initialization when we enable a strict
   // Seccomp-BPF policy.
   auto sandbox_type =
       sandbox::policy::SandboxTypeFromCommandLine(parameters.command_line);
+#if !defined(OS_BSD)
   if (parameters.zygote_child ||
       sandbox_type == sandbox::policy::SandboxType::kNetwork ||
 #if BUILDFLAG(IS_CHROMEOS_ASH)
@@ -155,6 +160,12 @@ int UtilityMain(const MainFunctionParams& parameters) 
         sandbox_type, std::move(pre_sandbox_hook),
         sandbox::policy::SandboxLinux::Options());
   }
+#else
+    sandbox::policy::SandboxLinux::PreSandboxHook pre_sandbox_hook;
+    sandbox::policy::Sandbox::Initialize(
+        sandbox_type, std::move(pre_sandbox_hook),
+        sandbox::policy::SandboxLinux::Options());
+#endif
 #elif defined(OS_WIN)
   g_utility_target_services = parameters.sandbox_info->target_services;
 #endif
