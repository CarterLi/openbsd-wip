+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

Using Tapper in an OpenBSD environment


## Run Tapper daemons

Essentially it's the test result database without automation.

Initialize a ~/.tapper/ with user-config, SQLite databases and examples:

  $ tapper init --default

Run the central daemons for collecting test reports and the query api:

* Web interface to browse reports:
  $ tapper_reports_web_server.pl

* Reports receiver:
  $ tapper-reports-receiver

* Reports query API
  $ tapper-reports-api

## Execute tests

### Set your environment

Several env vars are used to specify where the central server is, here
it's about where to send test results - $TAPPER_REPORT_SERVER.

### Run example tests and report results

You can execute the scripts with 'prove' (already available in
OpenBSD) which executes the tests but does **not** report
results to the server:

    $ prove     t/basic/example-01-basic.t
    $ prove -v  t/basic/example-01-basic.t
    $ prove -r  t/                     # recursive
    $ prove -rv t/                     # verbose
    $ prove -r  t/basic                # subset only
    $ prove -r  t/complex              # subset only

## Evaluate tests

The query API works by sending templates to the server which are
evaluated and sent back. Inside the templates you use a query language
to fetch values from the test results db.

### Simple results

  $ cd $HOME/.tapper/hello-world/02-query-api/
  $ cat hello.tt | nc localhost 7358
    Planned tests:
       5
       5
       5
       5

## Benchmarks

The mechanism is the same, just the templates are more complex,
e.g. to select values that are deeper embedded in the test results:

  $ cat benchmarks.tt | nc localhost 7358
    Benchmarks:
       1995.10
       1995.10
       1995.10
       1995.10

Now let's generate a gnuplot file with those data:

  $ cat benchmarks-gnuplot.tt | nc localhost 7358
    #! /usr/bin/env gnuplot
    TITLE = "Example bogomips"
    set title TITLE offset char 0, char -1
    set style data linespoints
    set xtics rotate by 45
    set xtics out offset 0,-2.0
    set term png size 1200, 800
    set output "example-03-benchmarks.png"
    
    plot '-' using 1:2 with linespoints lt 3 lw 1 title "ratio"
    
           19 1995.10
           25 1995.10
           31 1995.10
           32 1995.10

You can also directly pipe such a result into gnuplot:

  $ cat benchmarks-gnuplot.tt | nc localhost 7358 | gnuplot
  $ file example-03-benchmarks.png
	example-03-benchmarks.png: PNG image data, 640 x 92, 8-bit/color RGB, non-interlaced

See http://template-toolkit.org for more information about the
template language.

See also:
	https://github.com/tapper/Tapper/wiki/HelloWorld
	https://github.com/tapper/Tapper/wiki/UnobtrusiveAutomation
