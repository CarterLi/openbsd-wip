$OpenBSD: patch-chrome_browser_chrome_content_browser_client_cc,v 1.1 2011/08/16 08:17:44 robert Exp $
--- chrome/browser/chrome_content_browser_client.cc.orig	Sat Oct  8 10:34:09 2011
+++ chrome/browser/chrome_content_browser_client.cc	Mon Oct 10 13:54:04 2011
@@ -80,18 +80,18 @@
 #include "chrome/browser/chrome_browser_main_mac.h"
 #elif defined(OS_CHROMEOS)
 #include "chrome/browser/chromeos/chrome_browser_main_chromeos.h"
-#elif defined(OS_LINUX)
+#elif defined(OS_LINUX) || defined(OS_OPENBSD)
 #include "chrome/browser/chrome_browser_main_gtk.h"
 #endif
 
-#if defined(OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
 #include "base/linux_util.h"
 #include "chrome/browser/crash_handler_host_linux.h"
 #endif
 
 #if defined(TOOLKIT_VIEWS)
 #include "chrome/browser/ui/views/tab_contents/tab_contents_view_views.h"
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
 #include "chrome/browser/tab_contents/tab_contents_view_gtk.h"
 #elif defined(OS_MACOSX)
 #include "chrome/browser/tab_contents/tab_contents_view_mac.h"
@@ -134,7 +134,7 @@ content::BrowserMainParts* ChromeContentBrowserClient:
   return new ChromeBrowserMainPartsMac(parameters);
 #elif defined(OS_CHROMEOS)
   return new ChromeBrowserMainPartsChromeos(parameters);
-#elif defined(OS_LINUX)
+#elif defined(OS_LINUX) || defined(OS_OPENBSD)
   return new ChromeBrowserMainPartsGtk(parameters);
 #else
   return NULL;
@@ -145,7 +145,7 @@ TabContentsView* ChromeContentBrowserClient::CreateTab
     TabContents* tab_contents) {
 #if defined(TOOLKIT_VIEWS)
   return new TabContentsViewViews(tab_contents);
-#elif defined(OS_LINUX)
+#elif defined(TOOLKIT_GTK)
   return new TabContentsViewGtk(tab_contents);
 #elif defined(OS_MACOSX)
   return tab_contents_view_mac::CreateTabContentsView(tab_contents);
@@ -824,7 +824,7 @@ FilePath ChromeContentBrowserClient::GetDefaultDownloa
   return download_util::GetDefaultDownloadDirectory();
 }
 
-#if defined(OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_OPENBSD)
 int ChromeContentBrowserClient::GetCrashSignalFD(
     const CommandLine& command_line) {
   if (command_line.HasSwitch(switches::kExtensionProcess)) {
