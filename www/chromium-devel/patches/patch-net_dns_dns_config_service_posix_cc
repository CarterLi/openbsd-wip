$OpenBSD$
--- net/dns/dns_config_service_posix.cc.orig	Thu Aug 25 18:04:38 2011
+++ net/dns/dns_config_service_posix.cc	Thu Aug 25 19:36:27 2011
@@ -89,9 +89,17 @@ class DnsConfigServicePosix::WatcherDelegate
     DnsConfig config;
     struct __res_state res;
     bool success = false;
+#if defined(OS_OPENBSD)
+    if (resolver_lib_->ninit() == 0) {
+#else
     if (resolver_lib_->ninit(&res) == 0) {
+#endif
       success = ConvertResToConfig(res, &config);
+#if defined(OS_OPENBSD)
+      resolver_lib_->nclose();
+#else
       resolver_lib_->nclose(&res);
+#endif
     }
     // If this fails, the loop is gone, so there is no point retrying.
     message_loop_->PostTask(FROM_HERE, base::Bind(
@@ -196,13 +204,24 @@ void DnsConfigServicePosix::StartWatch() {
   }
 }
 
+#if defined(OS_OPENBSD)
+int DnsConfigServicePosix::ResolverLib::ninit() {
+  return ::res_init();
+}
+#else
 int DnsConfigServicePosix::ResolverLib::ninit(res_state statp) {
   return ::res_ninit(statp);
 }
+#endif
 
+#if defined(OS_OPENBSD)
+void DnsConfigServicePosix::ResolverLib::nclose() {
+}
+#else
 void DnsConfigServicePosix::ResolverLib::nclose(res_state statp) {
   return ::res_nclose(statp);
 }
+#endif
 
 DnsConfigServicePosix::FilePathWatcherShim::FilePathWatcherShim()
   : watcher_(new base::files::FilePathWatcher()) {}
@@ -269,7 +288,9 @@ bool ConvertResToConfig(const struct __res_state& res,
   dns_config->ndots = res.ndots;
   dns_config->timeout = base::TimeDelta::FromSeconds(res.retrans);
   dns_config->attempts = res.retry;
+#if defined(OS_LINUX)
   dns_config->rotate = res.options & RES_ROTATE;
+#endif
   dns_config->edns0 = res.options & RES_USE_EDNS0;
 
   return true;
