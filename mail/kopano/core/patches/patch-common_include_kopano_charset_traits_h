$OpenBSD$

Index: common/include/kopano/charset/traits.h
--- common/include/kopano/charset/traits.h.orig
+++ common/include/kopano/charset/traits.h
@@ -73,29 +73,29 @@ template<> class iconv_charset<const char *> _kc_final
 	}
 };
 
-template<size_t _N> class iconv_charset<char[_N]> _kc_final {
+template<size_t _ZCPN> class iconv_charset<char[_ZCPN]> _kc_final {
 public:
 	static const char *name() {
 		return CHARSET_CHAR;	// Current locale
 	}
-	static const char *rawptr(const char (&from) [_N]) {
+	static const char *rawptr(const char (&from) [_ZCPN]) {
 		return from;
 	}
-	static size_t rawsize(const char (&) [_N]) {
-		return _N - 1;
+	static size_t rawsize(const char (&) [_ZCPN]) {
+		return _ZCPN - 1;
 	}
 };
 
-template<size_t _N> class iconv_charset<const char[_N]> _kc_final {
+template<size_t _ZCPN> class iconv_charset<const char[_ZCPN]> _kc_final {
 public:
 	static const char *name() {
 		return CHARSET_CHAR;	// Current locale
 	}
-	static const char *rawptr(const char (&from) [_N]) {
+	static const char *rawptr(const char (&from) [_ZCPN]) {
 		return from;
 	}
-	static size_t rawsize(const char (&) [_N]) {
-		return _N - 1;
+	static size_t rawsize(const char (&) [_ZCPN]) {
+		return _ZCPN - 1;
 	}
 };
 
@@ -140,29 +140,29 @@ template<> class iconv_charset<const wchar_t *> _kc_fi
 	}
 };
 
-template<size_t _N> class iconv_charset<wchar_t[_N]> _kc_final {
+template<size_t _ZCPN> class iconv_charset<wchar_t[_ZCPN]> _kc_final {
 public:
 	static const char *name() {
 		return CHARSET_WCHAR;	// Current locale
 	}
-	static const char *rawptr(const wchar_t (&from) [_N]) {
+	static const char *rawptr(const wchar_t (&from) [_ZCPN]) {
 		return reinterpret_cast<const char*>(from);
 	}
-	static size_t rawsize(const wchar_t (&) [_N]) {
-		return (_N - 1) * sizeof(wchar_t);
+	static size_t rawsize(const wchar_t (&) [_ZCPN]) {
+		return (_ZCPN - 1) * sizeof(wchar_t);
 	}
 };
 
-template<size_t _N> class iconv_charset<const wchar_t[_N]> _kc_final {
+template<size_t _ZCPN> class iconv_charset<const wchar_t[_ZCPN]> _kc_final {
 public:
 	static const char *name() {
 		return CHARSET_WCHAR;	// Current locale
 	}
-	static const char *rawptr(const wchar_t (&from) [_N]) {
+	static const char *rawptr(const wchar_t (&from) [_ZCPN]) {
 		return reinterpret_cast<const char*>(from);
 	}
-	static size_t rawsize(const wchar_t (&) [_N]) {
-		return (_N - 1) * sizeof(wchar_t);
+	static size_t rawsize(const wchar_t (&) [_ZCPN]) {
+		return (_ZCPN - 1) * sizeof(wchar_t);
 	}
 };
 
