$OpenBSD$

stat64 -> stat and friends.

Index: 3rdParty/StormLib/src/FileStream.cpp
--- 3rdParty/StormLib/src/FileStream.cpp.orig
+++ 3rdParty/StormLib/src/FileStream.cpp
@@ -95,7 +95,7 @@ static bool BaseFile_Create(TFileStream * pStream)
     {
         intptr_t handle;
         
-        handle = open(pStream->szFileName, O_RDWR | O_CREAT | O_TRUNC | O_LARGEFILE, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);
+        handle = open(pStream->szFileName, O_RDWR | O_CREAT | O_TRUNC, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);
         if(handle == -1)
         {
             nLastError = errno;
@@ -143,12 +143,12 @@ static bool BaseFile_Open(TFileStream * pStream, const
 
 #if defined(PLATFORM_MAC) || defined(PLATFORM_LINUX) || defined(PLATFORM_HAIKU)
     {
-        struct stat64 fileinfo;
+        struct stat fileinfo;
         int oflag = (dwStreamFlags & STREAM_FLAG_READ_ONLY) ? O_RDONLY : O_RDWR;
         intptr_t handle;
 
         // Open the file
-        handle = open(szFileName, oflag | O_LARGEFILE);
+        handle = open(szFileName, oflag);
         if(handle == -1)
         {
             nLastError = errno;
@@ -157,7 +157,7 @@ static bool BaseFile_Open(TFileStream * pStream, const
         }
 
         // Get the file size
-        if(fstat64(handle, &fileinfo) == -1)
+        if(fstat(handle, &fileinfo) == -1)
         {
             nLastError = errno;
             close(handle);
@@ -220,7 +220,7 @@ static bool BaseFile_Read(
         // we have to update the file position   xxx
         if(ByteOffset != pStream->Base.File.FilePos)
         {
-            lseek64((intptr_t)pStream->Base.File.hFile, (off64_t)(ByteOffset), SEEK_SET);
+            lseek((intptr_t)pStream->Base.File.hFile, (off_t)(ByteOffset), SEEK_SET);
             pStream->Base.File.FilePos = ByteOffset;
         }
 
@@ -291,7 +291,7 @@ static bool BaseFile_Write(TFileStream * pStream, ULON
         // we have to update the file position
         if(ByteOffset != pStream->Base.File.FilePos)
         {
-            lseek64((intptr_t)pStream->Base.File.hFile, (off64_t)(ByteOffset), SEEK_SET);
+            lseek((intptr_t)pStream->Base.File.hFile, (off_t)(ByteOffset), SEEK_SET);
             pStream->Base.File.FilePos = ByteOffset;
         }
 
@@ -352,7 +352,7 @@ static bool BaseFile_Resize(TFileStream * pStream, ULO
     
 #if defined(PLATFORM_MAC) || defined(PLATFORM_LINUX) || defined(PLATFORM_HAIKU)
     {
-        if(ftruncate64((intptr_t)pStream->Base.File.hFile, (off64_t)NewFileSize) == -1)
+        if(ftruncate((intptr_t)pStream->Base.File.hFile, (off_t)NewFileSize) == -1)
         {
             nLastError = errno;
             return false;
@@ -494,7 +494,7 @@ static bool BaseMap_Open(TFileStream * pStream, const 
 #endif
 
 #if defined(PLATFORM_MAC) || defined(PLATFORM_LINUX) || defined(PLATFORM_HAIKU)
-    struct stat64 fileinfo;
+    struct stat fileinfo;
     intptr_t handle;
     bool bResult = false;
 
@@ -503,7 +503,7 @@ static bool BaseMap_Open(TFileStream * pStream, const 
     if(handle != -1)
     {
         // Get the file size
-        if(fstat64(handle, &fileinfo) != -1)
+        if(fstat(handle, &fileinfo) != -1)
         {
             pStream->Base.Map.pbFile = (LPBYTE)mmap(NULL, (size_t)fileinfo.st_size, PROT_READ, MAP_PRIVATE, handle, 0);
             if(pStream->Base.Map.pbFile != NULL)
