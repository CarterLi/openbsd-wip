alignment aware memory pools:
https://github.com/beyond-all-reason/spring/pull/1165

Index: rts/Sim/Weapons/WeaponMemPool.h
--- rts/Sim/Weapons/WeaponMemPool.h.orig
+++ rts/Sim/Weapons/WeaponMemPool.h
@@ -9,13 +9,14 @@
 
 #include "Sim/Weapons/PlasmaRepulser.h"
 
-static constexpr size_t WMP_S = AlignUp(sizeof(CPlasmaRepulser), 4); //biggest in size
+static constexpr size_t WMP_S = AlignUp(sizeof(CPlasmaRepulser), 8); //biggest in size
+static constexpr size_t WMP_A = 8;
 
 #if (defined(__x86_64) || defined(__x86_64__) || defined(_M_X64))
 // NOTE: ~742MB, way too big for 32-bit builds
-typedef StaticMemPool<MAX_UNITS * MAX_WEAPONS_PER_UNIT, WMP_S> WeaponMemPool;
+typedef StaticMemPool<MAX_UNITS * MAX_WEAPONS_PER_UNIT, WMP_S, WMP_A> WeaponMemPool;
 #else
-typedef FixedDynMemPool<WMP_S, (MAX_UNITS * MAX_WEAPONS_PER_UNIT) / 4000, (MAX_UNITS * MAX_WEAPONS_PER_UNIT) / 256> WeaponMemPool;
+typedef FixedDynMemPool<WMP_S, (MAX_UNITS * MAX_WEAPONS_PER_UNIT) / 4000, (MAX_UNITS * MAX_WEAPONS_PER_UNIT) / 256, WMP_A> WeaponMemPool;
 #endif
 
 extern WeaponMemPool weaponMemPool;
