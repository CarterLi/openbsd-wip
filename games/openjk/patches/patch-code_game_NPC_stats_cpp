$OpenBSD$

strlcat etc
try strlcat in line 4122 with MAX_NPC_DATA_SIZE -> works!

Index: code/game/NPC_stats.cpp
--- code/game/NPC_stats.cpp.orig
+++ code/game/NPC_stats.cpp
@@ -380,7 +380,7 @@ void SpewDebugStuffToFile(animation_t *bgGlobalAnimati
 
 	while (i < MAX_ANIMATIONS)
 	{
-		strcat(BGPAFtext, va("%i %i\n", i, bgGlobalAnimations[i].frameLerp));
+		strlcat(BGPAFtext, va("%i %i\n", i, bgGlobalAnimations[i].frameLerp), sizeof(BGPAFtext));
 		i++;
 	}
 
@@ -565,7 +565,7 @@ static void ParseAnimationEvtBlock(int glaIndex, unsig
 			{
 				break;
 			}
-			strcpy(stringData, token);
+			strlcpy(stringData, token, sizeof(stringData));
 			//get lowest value
 			token = COM_Parse( text_p );
 			if ( !token )
@@ -1066,7 +1066,7 @@ int		G_ParseAnimFileSet(const char *skeletonName, cons
 		//---------------------------------------------------------
 		fileIndex = level.numKnownAnimFileSets;
 		level.numKnownAnimFileSets++;
-		strcpy(level.knownAnimFileSets[fileIndex].filename, skeletonName);
+		strlcpy(level.knownAnimFileSets[fileIndex].filename, skeletonName, sizeof(level.knownAnimFileSets[fileIndex].filename));
 
 		level.knownAnimFileSets[fileIndex].torsoAnimEventCount = 0;
 		level.knownAnimFileSets[fileIndex].legsAnimEventCount = 0;
@@ -1379,14 +1379,14 @@ void NPC_PrecacheWeapons( team_t playerTeam, int spawn
 
 			char weaponModel[64];
 
-			strcpy (weaponModel, weaponData[curWeap].weaponMdl);
+			strlcpy (weaponModel, weaponData[curWeap].weaponMdl, sizeof(weaponModel));
 			if (char *spot = strstr(weaponModel, ".md3") ) {
 				*spot = 0;
 				spot = strstr(weaponModel, "_w");//i'm using the in view weapon array instead of scanning the item list, so put the _w back on
 				if (!spot) {
-					strcat (weaponModel, "_w");
+					strlcat (weaponModel, "_w", sizeof(weaponModel));
 				}
-				strcat (weaponModel, ".glm");	//and change to ghoul2
+				strlcat (weaponModel, ".glm", sizeof(weaponModel));	//and change to ghoul2
 			}
 			gi.G2API_PrecacheGhoul2Model( weaponModel ); // correct way is item->world_model
 		}
@@ -1594,7 +1594,7 @@ void CG_NPC_Precache ( gentity_t *spawner )
 		return;
 	}
 
-	strcpy(customSkin,"default");
+	strlcpy(customSkin,"default", sizeof(customSkin));
 
 	p = NPCParms;
 	COM_BeginParseSession();
@@ -1949,7 +1949,7 @@ qboolean NPC_ParseParms( const char *NPCName, gentity_
 	char	surfOn[1024]={0};
 	qboolean parsingPlayer = qfalse;
 
-	strcpy(customSkin,"default");
+	strlcpy(customSkin,"default", sizeof(customSkin));
 	if ( !NPCName || !NPCName[0])
 	{
 		NPCName = "Player";
@@ -4018,7 +4018,7 @@ Ghoul2 Insert Start
 			if ( NPC->client->NPC_class == CLASS_VEHICLE )
 			{
 				int iVehIndex = BG_VehicleGetIndex( NPC->NPC_type );
-				strcpy(customSkin, "default");	// Ignore any custom skin that may have come from the NPC File
+				strlcpy(customSkin, "default", sizeof(customSkin));	// Ignore any custom skin that may have come from the NPC File
 				Q_strncpyz( playerModel, g_vehicleInfo[iVehIndex].model, sizeof(playerModel));
 				if ( g_vehicleInfo[iVehIndex].skin && g_vehicleInfo[iVehIndex].skin[0] )
 				{
@@ -4110,7 +4110,7 @@ void NPC_LoadParms( void )
 		{
 			if ( totallen && *(marker-1) == '}' )
 			{//don't let previous file end on a } because that must be a stand-alone token
-				strcat( marker, " " );
+				strlcat( marker, " " , sizeof(marker));
 				totallen++;
 				marker++;
 			}
@@ -4119,7 +4119,7 @@ void NPC_LoadParms( void )
 			if ( totallen + len >= MAX_NPC_DATA_SIZE ) {
 				G_Error( "NPC_LoadParms: ran out of space before reading %s\n(you must make the .npc files smaller)", holdChar );
 			}
-			strcat( marker, buffer );
+			strlcat( marker, buffer , MAX_NPC_DATA_SIZE);
 			gi.FS_FreeFile( buffer );
 
 			totallen += len;
