$OpenBSD$

strlcat

Index: codemp/game/bg_vehicleLoad.c
--- codemp/game/bg_vehicleLoad.c.orig
+++ codemp/game/bg_vehicleLoad.c
@@ -160,7 +160,7 @@ static qboolean BG_ParseVehWeaponParm( vehWeaponInfo_t
 		if (!*(char **)(b+vehWeaponField->ofs))
 		{ //just use 1024 bytes in case we want to write over the string
 			*(char **)(b+vehWeaponField->ofs) = (char *)BG_Alloc(1024);//(char *)BG_Alloc(strlen(value));
-			strcpy(*(char **)(b+vehWeaponField->ofs), value);
+			strlcpy(*(char **)(b+vehWeaponField->ofs), value, sizeof(*(char **)(b+vehWeaponField->ofs)));
 		}
 
 		break;
@@ -646,7 +646,7 @@ void BG_VehicleSetDefaults( vehicleInfo_t *vehicle )
 	{
 		vehicle->name = (char *)BG_Alloc(1024);
 	}
-	strcpy(vehicle->name, "default");
+	strlcpy(vehicle->name, "default", sizeof(vehicle->name));
 
 	//general data
 	vehicle->type = VH_SPEEDER;				//what kind of vehicle
@@ -692,7 +692,7 @@ void BG_VehicleSetDefaults( vehicleInfo_t *vehicle )
 	{
 		vehicle->model = (char *)BG_Alloc(1024);
 	}
-	strcpy(vehicle->model, "models/map_objects/ships/swoop.md3");
+	strlcpy(vehicle->model, "models/map_objects/ships/swoop.md3", sizeof(vehicle->model));
 
 	vehicle->modelIndex = 0;							//set internally, not until this vehicle is spawned into the level
 	vehicle->skin = NULL;								//what skin to use - if make it an NPC's primary model, don't need this?
@@ -796,7 +796,7 @@ static qboolean BG_ParseVehicleParm( vehicleInfo_t *ve
 		if (!*(char **)(b+vehField->ofs))
 		{ //just use 128 bytes in case we want to write over the string
 			*(char **)(b+vehField->ofs) = (char *)BG_Alloc(128);//(char *)BG_Alloc(strlen(value));
-			strcpy(*(char **)(b+vehField->ofs), value);
+			strlcpy(*(char **)(b+vehField->ofs), value, sizeof(*(char **)(b+vehField->ofs)));
 		}
 
 		break;
@@ -1314,7 +1314,7 @@ void BG_VehWeaponLoadParms( void )
 			// Don't let it end on a } because that should be a stand-alone token.
 			if ( totallen && *(marker-1) == '}' )
 			{
-				strcat( marker, " " );
+				strlcat( marker, " " , sizeof(marker));
 				totallen++;
 				marker++;
 			}
@@ -1322,7 +1322,7 @@ void BG_VehWeaponLoadParms( void )
 			if ( totallen + len >= MAX_VEH_WEAPON_DATA_SIZE ) {
 				Com_Error(ERR_DROP, "Vehicle Weapon extensions (*.vwp) are too large" );
 			}
-			strcat( marker, tempReadBuffer );
+			strlcat( marker, tempReadBuffer , sizeof(marker));
 			trap->FS_Close( f );
 
 			totallen += len;
@@ -1380,7 +1380,7 @@ void BG_VehicleLoadParms( void )
 			// Don't let it end on a } because that should be a stand-alone token.
 			if ( totallen && *(marker-1) == '}' )
 			{
-				strcat( marker, " " );
+				strlcat( marker, " " , sizeof(marker));
 				totallen++;
 				marker++;
 			}
@@ -1388,7 +1388,7 @@ void BG_VehicleLoadParms( void )
 			if ( totallen + len >= MAX_VEHICLE_DATA_SIZE ) {
 				Com_Error(ERR_DROP, "Vehicle extensions (*.veh) are too large" );
 			}
-			strcat( marker, tempReadBuffer );
+			strlcat( marker, tempReadBuffer , sizeof(marker));
 			trap->FS_Close( f );
 
 			totallen += len;
