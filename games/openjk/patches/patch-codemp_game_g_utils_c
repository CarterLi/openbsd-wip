$OpenBSD$

strlcpy

Index: codemp/game/g_utils.c
--- codemp/game/g_utils.c.orig
+++ codemp/game/g_utils.c
@@ -44,14 +44,14 @@ void AddRemap(const char *oldShader, const char *newSh
 	for (i = 0; i < remapCount; i++) {
 		if (Q_stricmp(oldShader, remappedShaders[i].oldShader) == 0) {
 			// found it, just update this one
-			strcpy(remappedShaders[i].newShader,newShader);
+			strlcpy(remappedShaders[i].newShader,newShader, sizeof(remappedShaders[i].newShader));
 			remappedShaders[i].timeOffset = timeOffset;
 			return;
 		}
 	}
 	if (remapCount < MAX_SHADER_REMAPS) {
-		strcpy(remappedShaders[remapCount].newShader,newShader);
-		strcpy(remappedShaders[remapCount].oldShader,oldShader);
+		strlcpy(remappedShaders[remapCount].newShader,newShader, sizeof(remappedShaders[remapCount].newShader));
+		strlcpy(remappedShaders[remapCount].oldShader,oldShader, sizeof(remappedShaders[remapCount].oldShader));
 		remappedShaders[remapCount].timeOffset = timeOffset;
 		remapCount++;
 	}
@@ -763,11 +763,11 @@ static void G_SpewEntList(void)
 
 			if (ent->classname && ent->classname[0])
 			{
-				strcpy(className, ent->classname);
+				strlcpy(className, ent->classname, sizeof(className));
 			}
 			else
 			{
-				strcpy(className, "Unknown");
+				strlcpy(className, "Unknown", sizeof(className));
 			}
 			str = va("ENT %4i: Classname %s\n", ent->s.number, className);
 			Com_Printf(str);
