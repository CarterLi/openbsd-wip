$OpenBSD$

strlcat

Index: codemp/qcommon/files.cpp
--- codemp/qcommon/files.cpp.orig
+++ codemp/qcommon/files.cpp
@@ -2131,7 +2131,7 @@ static pack_t *FS_LoadZipFile( const char *zipfile, co
 		Q_strlwr( filename_inzip );
 		hash = FS_HashFileName(filename_inzip, pack->hashSize);
 		buildBuffer[i].name = namePtr;
-		strcpy( buildBuffer[i].name, filename_inzip );
+		strlcpy( buildBuffer[i].name, filename_inzip , sizeof(buildBuffer[i].name));
 		namePtr += strlen(filename_inzip) + 1;
 		// store the file position in the zip
 		buildBuffer[i].pos = unzGetOffset(uf);
@@ -2222,7 +2222,7 @@ static int FS_ReturnPath( const char *zname, char *zpa
 		}
 		at++;
 	}
-	strcpy(zpath, zname);
+	strlcpy(zpath, zname, sizeof(zpath));
 	zpath[len] = 0;
 	*depth = newdep;
 
@@ -2447,7 +2447,7 @@ int	FS_GetFileList(  const char *path, const char *ext
 	for (i =0; i < nFiles; i++) {
 		nLen = strlen(pFiles[i]) + 1;
 		if (nTotal + nLen + 1 < bufsize) {
-			strcpy(listbuf, pFiles[i]);
+			strlcpy(listbuf, pFiles[i], sizeof(listbuf));
 			listbuf += nLen;
 			nTotal += nLen;
 		}
@@ -2617,8 +2617,8 @@ int	FS_GetModList( char *listbuf, int bufsize ) {
 				// nLen is the length of the mod path
 				// we need to see if there is a description available
 				descPath[0] = '\0';
-				strcpy(descPath, name);
-				strcat(descPath, "/description.txt");
+				strlcpy(descPath, name, sizeof(descPath));
+				strlcat(descPath, "/description.txt", sizeof(descPath));
 				nDescLen = FS_SV_FOpenFileRead( descPath, &descHandle );
 				if ( nDescLen > 0 && descHandle) {
 					FILE *file;
@@ -2630,19 +2630,19 @@ int	FS_GetModList( char *listbuf, int bufsize ) {
 					}
 					FS_FCloseFile(descHandle);
 				} else if ( isBase ) {
-					strcpy(descPath, SE_GetString("MENUS_JEDI_ACADEMY"));
+					strlcpy(descPath, SE_GetString("MENUS_JEDI_ACADEMY"), sizeof(descPath));
 				} else {
-					strcpy(descPath, name);
+					strlcpy(descPath, name, sizeof(descPath));
 				}
 				nDescLen = strlen(descPath) + 1;
 
 				if (nTotal + nLen + 1 + nDescLen + 1 < bufsize) {
 					if ( isBase )
-						strcpy(listbuf, "");
+						strlcpy(listbuf, "", sizeof(listbuf));
 					else
-						strcpy(listbuf, name);
+						strlcpy(listbuf, name, sizeof(listbuf));
 					listbuf += nLen;
-					strcpy(listbuf, descPath);
+					strlcpy(listbuf, descPath, sizeof(listbuf));
 					listbuf += nDescLen;
 					nTotal += nLen + nDescLen;
 					nMods++;
