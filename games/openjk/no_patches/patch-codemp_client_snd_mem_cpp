$OpenBSD$

strlcpy

Index: codemp/client/snd_mem.cpp
--- codemp/client/snd_mem.cpp.orig
+++ codemp/client/snd_mem.cpp
@@ -282,7 +282,7 @@ char *Filename_WithoutPath(const char *psFilename)
   	if (!p++)
 		p=psFilename;
 
-	strcpy(sString,p);
+	strlcpy(sString,p, sizeof(sString));
 
 	return sString;
 
@@ -294,7 +294,7 @@ char *Filename_WithoutExt(const char *psFilename)
 {
 	static char sString[MAX_QPATH];	// !
 
-	strcpy(sString,psFilename);
+	strlcpy(sString,psFilename, sizeof(sString));
 
 	char *p = strrchr(sString,'.');
 	char *p2= strrchr(sString,'\\');
@@ -425,7 +425,7 @@ void R_CheckMP3s( const char *psDir )
 
 								// now set our temp SFX struct back to default name so nothing else accidentally uses it...
 								//
-								strcpy(pSFX->sSoundName, sReservedSFXEntrynameForMP3);
+								strlcpy(pSFX->sSoundName, sReservedSFXEntrynameForMP3, sizeof(pSFX->sSoundName));
 								pSFX->bDefaultSound = qfalse;
 							}
 
@@ -559,7 +559,7 @@ void S_MP3_CalcVols_f( void )
 			}
 			continue;
 		}
-		strcpy(sStartDir,Cmd_Argv(i));
+		strlcpy(sStartDir,Cmd_Argv(i), sizeof(sStartDir));
 	}
 
 	Com_Printf(va("Starting Scan for Updates in Dir: %s\n",sStartDir));
@@ -597,42 +597,42 @@ static qboolean S_LoadSound_FileLoadAndNameAdjuster(ch
 			FS_FOpenFileRead(psFilename, &hFile, qfalse);		//cache the wav
 			if (!hFile)
 			{
-				strcpy(&psFilename[iNameStrlen-3],"mp3");		//not there try mp3
+				strlcpy(&psFilename[iNameStrlen-3],"mp3", sizeof(&psFilename[iNameStrlen-3]));		//not there try mp3
 				FS_FOpenFileRead(psFilename, &hFile, qfalse);	//cache the mp3
 			}
 			if (hFile)
 			{
 				FS_FCloseFile(hFile);
 			}
-			strcpy(&psFilename[iNameStrlen-3],"wav");	//put it back to wav
+			strlcpy(&psFilename[iNameStrlen-3],"wav", sizeof(&psFilename[iNameStrlen-3]));	//put it back to wav
 
 			//French
 			strncpy(psVoice,"chr_f",5);	// same number of letters as "chars"
 			FS_FOpenFileRead(psFilename, &hFile, qfalse);		//cache the wav
 			if (!hFile)
 			{
-				strcpy(&psFilename[iNameStrlen-3],"mp3");		//not there try mp3
+				strlcpy(&psFilename[iNameStrlen-3],"mp3", sizeof(&psFilename[iNameStrlen-3]));		//not there try mp3
 				FS_FOpenFileRead(psFilename, &hFile, qfalse);	//cache the mp3
 			}
 			if (hFile)
 			{
 				FS_FCloseFile(hFile);
 			}
-			strcpy(&psFilename[iNameStrlen-3],"wav");	//put it back to wav
+			strlcpy(&psFilename[iNameStrlen-3],"wav", sizeof(&psFilename[iNameStrlen-3]));	//put it back to wav
 
 			//Spanish
 			strncpy(psVoice,"chr_e",5);	// same number of letters as "chars"
 			FS_FOpenFileRead(psFilename, &hFile, qfalse);		//cache the wav
 			if (!hFile)
 			{
-				strcpy(&psFilename[iNameStrlen-3],"mp3");		//not there try mp3
+				strlcpy(&psFilename[iNameStrlen-3],"mp3", sizeof(&psFilename[iNameStrlen-3]));		//not there try mp3
 				FS_FOpenFileRead(psFilename, &hFile, qfalse);	//cache the mp3
 			}
 			if (hFile)
 			{
 				FS_FCloseFile(hFile);
 			}
-			strcpy(&psFilename[iNameStrlen-3],"wav");	//put it back to wav
+			strlcpy(&psFilename[iNameStrlen-3],"wav", sizeof(&psFilename[iNameStrlen-3]));	//put it back to wav
 
 			strncpy(psVoice,"chars",5);	//put it back to chars
 		}
