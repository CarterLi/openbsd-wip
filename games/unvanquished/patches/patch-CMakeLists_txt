$OpenBSD$
--- CMakeLists.txt.orig	Sun Dec  1 19:10:53 2013
+++ CMakeLists.txt	Thu Dec 26 09:14:50 2013
@@ -64,6 +64,8 @@ endif()
 # When adding a new platform, look at all the places WIN32, APPLE and LINUX are used
 if( CMAKE_SYSTEM_NAME MATCHES "Linux" )
   set( LINUX ON )
+elseif( CMAKE_SYSTEM_NAME MATCHES "OpenBSD" )
+  set( OPENBSD ON )
 elseif( NOT WIN32 AND NOT APPLE )
   message( FATAL_ERROR "Platform not supported" )
 endif()
@@ -215,7 +217,6 @@ else()
   try_linker_flag( LINKER_O1 "-Wl,-O1" )
   try_linker_flag( LINKER_SORT_COMMON "-Wl,--sort-common" )
   try_linker_flag( LINKER_AS_NEEDED "-Wl,--as-needed" )
-  try_linker_flag( LINKER_NO_UNDEFINED "-Wl,--no-undefined" )
   try_linker_flag( LINKER_Z_RELRO "-Wl,-z,relro" )
   try_linker_flag( LINKER_Z_NOW "-Wl,-z,now" )
   if( WIN32 )
@@ -911,6 +912,14 @@ if( APPLE )
     ${LIB_DIR}/nacl/native_client/src/shared/imc/posix/nacl_imc_posix.cc
     ${LIB_DIR}/nacl/native_client/src/shared/imc/osx/nacl_imc.cc
   )
+elseif( OPENBSD )
+  set( NACLLIST_NATIVE
+    ${LIB_DIR}/nacl/nacl.cpp
+    ${LIB_DIR}/nacl/native_client/src/shared/imc/nacl_imc_common.cc
+    ${LIB_DIR}/nacl/native_client/src/shared/imc/posix/nacl_imc_posix.cc
+    ${LIB_DIR}/nacl/native_client/src/shared/imc/linux/nacl_imc.cc
+  )
+
 elseif( LINUX )
   set( NACLLIST_NATIVE
     ${LIB_DIR}/nacl/nacl.cpp
@@ -1034,6 +1043,8 @@ endif()
 # Native client
 if( APPLE )
   add_definitions( -DNACL_WINDOWS=0 -DNACL_LINUX=0 -DNACL_ANDROID=0 -DNACL_OSX=1 )
+elseif( OPENBSD )
+  add_definitions( -DNACL_WINDOWS=0 -DNACL_LINUX=0 -DNACL_ANDROID=0 -DNACL_OSX=0 )
 elseif( LINUX )
   add_definitions( -DNACL_WINDOWS=0 -DNACL_LINUX=1 -DNACL_ANDROID=0 -DNACL_OSX=0 )
 elseif( WIN32 )
@@ -1186,7 +1197,7 @@ if( BUILD_NEW_RENDERER OR BUILD_OLD_RENDERER )
 endif()
 
 # X11
-if( LINUX AND ( BUILD_CLIENT OR BUILD_NEW_RENDERER OR BUILD_OLD_RENDERER ) )
+if( ( LINUX OR OPENBSD ) AND ( BUILD_CLIENT OR BUILD_NEW_RENDERER OR BUILD_OLD_RENDERER ) )
   find_package( X11 REQUIRED )
   include_directories( ${X11_INCLUDE_DIRS} )
   set( LIBS_CLIENT ${LIBS_CLIENT} ${X11_LIBRARIES} )
