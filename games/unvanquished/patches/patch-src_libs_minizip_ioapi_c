$OpenBSD$
--- src/libs/minizip/ioapi.c.orig	Sun Dec  1 19:10:54 2013
+++ src/libs/minizip/ioapi.c	Thu Dec 26 12:35:16 2013
@@ -14,18 +14,7 @@
         #define _CRT_SECURE_NO_WARNINGS
 #endif
 
-#if defined(__APPLE__) || defined(IOAPI_NO_64)
-// In darwin and perhaps other BSD variants off_t is a 64 bit value, hence no need for specific 64 bit functions
-#define FOPEN_FUNC(filename, mode) fopen(filename, mode)
-#define FTELLO_FUNC(stream) ftello(stream)
-#define FSEEKO_FUNC(stream, offset, origin) fseeko(stream, offset, origin)
-#else
-#define FOPEN_FUNC(filename, mode) fopen64(filename, mode)
-#define FTELLO_FUNC(stream) ftello64(stream)
-#define FSEEKO_FUNC(stream, offset, origin) fseeko64(stream, offset, origin)
-#endif
 
-
 #include "ioapi.h"
 
 voidpf call_zopen64 (const zlib_filefunc64_32_def* pfilefunc,const void*filename,int mode)
@@ -124,7 +113,7 @@ static voidpf ZCALLBACK fopen64_file_func (voidpf opaq
         mode_fopen = "wb";
 
     if ((filename!=NULL) && (mode_fopen != NULL))
-        file = FOPEN_FUNC((const char*)filename, mode_fopen);
+        file = fopen((const char*)filename, mode_fopen);
     return file;
 }
 
@@ -154,7 +143,7 @@ static long ZCALLBACK ftell_file_func (voidpf opaque, 
 static ZPOS64_T ZCALLBACK ftell64_file_func (voidpf opaque, voidpf stream)
 {
     ZPOS64_T ret;
-    ret = FTELLO_FUNC((FILE *)stream);
+    ret = ftello((FILE *)stream);
     return ret;
 }
 
@@ -200,7 +189,7 @@ static long ZCALLBACK fseek64_file_func (voidpf  opaqu
     }
     ret = 0;
 
-    if(FSEEKO_FUNC((FILE *)stream, offset, fseek_origin) != 0)
+    if(fseeko((FILE *)stream, offset, fseek_origin) != 0)
                         ret = -1;
 
     return ret;
