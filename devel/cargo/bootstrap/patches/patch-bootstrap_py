Allow building in no-download mode. Taken from this pull request:
  https://github.com/dhuseby/cargo-bootstrap/pull/10
--- bootstrap.py.orig	Thu Aug 27 02:37:22 2015
+++ bootstrap.py	Sat Aug 29 17:40:36 2015
@@ -103,6 +103,7 @@ import argparse, \
        urlparse
 import pytoml as toml
 import dulwich.porcelain as git
+from glob import glob
 
 TARGET = None
 HOST = None
@@ -125,6 +126,7 @@ BSCRIPT = re.compile('^cargo:(?P<key>([^\s=]+))(=(?P<v
 BNAME = re.compile('^(lib)?(?P<name>([^_]+))(_.*)?$')
 BUILT = {}
 CRATES = {}
+CVER = re.compile("-([^-]+)$")
 UNRESOLVED = []
 PFX = []
 
@@ -703,7 +705,7 @@ class Crate(object):
         return self._resolved
 
     @dbgCtx
-    def resolve(self, tdir, idir, graph=None):
+    def resolve(self, tdir, idir, nodl, graph=None):
         global CRATES
         global UNRESOLVED
 
@@ -733,7 +735,10 @@ class Crate(object):
                 dbg('Looking up info for %s %s' % (d['name'], str(svr)))
                 if d.get('local', None) is None:
                     name, ver, deps, ftrs, cksum = crate_info_from_index(idir, d['name'], svr)
-                    cdir = dl_and_check_crate(tdir, name, ver, cksum)
+                    if nodl:
+                        cdir = find_downloaded_crate(tdir, name, svr)
+                    else:
+                        cdir = dl_and_check_crate(tdir, name, ver, cksum)
                     _, tver, tdeps, build = crate_info_from_toml(cdir)
                     deps += tdeps
                 else:
@@ -979,6 +984,23 @@ def dl_and_check_crate(tdir, name, ver, cksum):
     return cdir
 
 @idnt
+def find_downloaded_crate(tdir, name, svr):
+    exists = glob("%s/%s-[0-9]*" % (tdir, name))
+    if not exists:
+        raise RuntimeError("crate does not exist and have --no-download: %s" % name)
+
+    # First, grok the available versions.
+    aver = sorted([Semver(CVER.search(x).group(1)) for x in exists])
+
+    # Now filter the "suitable" versions based on our version range.
+    sver = filter(svr.compare, aver)
+    if not sver:
+        raise RuntimeError("unable to satisfy dependency %s %s from %s; try running without --no-download" % (name, svr, map(str, aver)))
+
+    cver = sver[-1]
+    return "%s/%s-%s" % (tdir, name, cver)
+
+@idnt
 def crate_info_from_toml(cdir):
     try:
         with open(os.path.join(cdir, 'Cargo.toml'), 'rb') as ctoml:
@@ -1160,6 +1182,8 @@ def args_parser():
                         help="don't delete the target dir and crate index")
     parser.add_argument('--download', action='store_true',
                         help="only download the crates needed to build cargo")
+    parser.add_argument('--no-download', action='store_true',
+                        help="don't download any crates (fail if any do not exist)")
     parser.add_argument('--graph', action='store_true',
                         help="output a dot graph of the dependencies")
     return parser
@@ -1240,7 +1264,7 @@ if __name__ == "__main__":
         print '===================================='
         while len(UNRESOLVED) > 0:
             crate = UNRESOLVED.pop(0)
-            crate.resolve(args.target_dir, args.crate_index, GRAPH)
+            crate.resolve(args.target_dir, args.crate_index, args.no_download, GRAPH)
 
         if args.graph:
             print >> GRAPH, "}"
