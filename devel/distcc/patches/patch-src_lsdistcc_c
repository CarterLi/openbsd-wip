$OpenBSD$

warning: format '%ld' expects type 'long int', but argument N has type 'time_t'

--- src/lsdistcc.c.orig	Wed Dec 23 22:36:44 2015
+++ src/lsdistcc.c	Wed Dec 23 22:38:44 2015
@@ -479,7 +479,7 @@ void server_handle_event(state_t *sp)
 
         if (opt_verbose > 2)
             fprintf(stderr,
-                    "now %ld %ld: server_handle_event: %s: state %d\n",
+                    "now %lld %ld: server_handle_event: %s: state %d\n",
                     now.tv_sec, (long) now.tv_usec/1000,
                     sp->req.hname, sp->status);
 
@@ -506,7 +506,7 @@ void server_handle_event(state_t *sp)
                 /* start the nonblocking connect... */
                 if (opt_verbose > 0)
                     fprintf(stderr,
-                            "now %ld %ld: Connecting to %s\n",
+                            "now %lld %ld: Connecting to %s\n",
                             now.tv_sec, (long) now.tv_usec/1000, sp->req.hname);
                 if (connect(sp->fd, (struct sockaddr *)&sa, sizeof(sa))
                     && errno != EINPROGRESS) {
@@ -542,7 +542,7 @@ void server_handle_event(state_t *sp)
                 if (connecterr) {
                     if (opt_verbose > 0)
                        fprintf(stderr,
-                               "now %ld %ld: Connecting to %s failed "
+                               "now %lld %ld: Connecting to %s failed "
                                "with errno %d = %s\n",
                          now.tv_sec, (long) now.tv_usec/1000, sp->req.hname,
                          connecterr, strerror(connecterr));
@@ -557,7 +557,7 @@ void server_handle_event(state_t *sp)
                 }
                 if (opt_verbose > 0)
                     fprintf(stderr,
-                            "now %ld %ld: %s: sending compile request\n",
+                            "now %lld %ld: %s: sending compile request\n",
                             now.tv_sec, (long) now.tv_usec/1000, sp->req.hname);
                 nsend = canned_query_len;
                 nsent = write(sp->fd, canned_query, nsend);
@@ -565,13 +565,13 @@ void server_handle_event(state_t *sp)
                     if (opt_verbose > 1) {
                         if (nsent == -1)
                             fprintf(stderr,
-                                    "now %ld %ld: Sending to %s failed, "
+                                    "now %lld %ld: Sending to %s failed, "
                                     "errno %d\n",
                                     now.tv_sec, (long) now.tv_usec/1000, sp->req.hname,
                                     connecterr);
                         else
                             fprintf(stderr,
-                                    "now %ld %ld: Sending to %s failed, "
+                                    "now %lld %ld: Sending to %s failed, "
                                     "nsent %d != nsend %d\n",
                                     now.tv_sec, (long) now.tv_usec/1000,
                                     sp->req.hname, nsent, nsend);
@@ -743,8 +743,8 @@ static int one_poll_loop(struct rslave_s* rs, struct s
             nwithtries[sp->ntries]++;
             if (opt_verbose > 0)
                 fprintf(stderr,
-                        "now %ld %ld: Resending %s because "
-                        "deadline was %ld %ld\n",
+                        "now %lld %ld: Resending %s because "
+                        "deadline was %lld %ld\n",
                         now.tv_sec, (long) now.tv_usec/1000, sp->req.hname,
                         sp->deadline.tv_sec, (long) sp->deadline.tv_usec/1000);
             break;
@@ -758,7 +758,7 @@ static int one_poll_loop(struct rslave_s* rs, struct s
             server_handle_event(sp);
             if (opt_verbose > 0)
                 fprintf(stderr,
-                        "now %ld %ld: %s timed out while connecting\n",
+                        "now %lld %ld: %s timed out while connecting\n",
                         now.tv_sec, (long) now.tv_usec/1000, sp->req.hname);
         }
         if ((sp->status == STATE_READ_DONEPKT ||
@@ -771,7 +771,7 @@ static int one_poll_loop(struct rslave_s* rs, struct s
             server_handle_event(sp);
             if (opt_verbose > 0)
                 fprintf(stderr,
-                        "now %ld %ld: %s timed out while compiling\n",
+                        "now %lld %ld: %s timed out while compiling\n",
                         now.tv_sec, (long) now.tv_usec/1000, sp->req.hname);
         }
     }
@@ -793,7 +793,7 @@ static int one_poll_loop(struct rslave_s* rs, struct s
        and mark its timeout. */
     if (found) {
         if (opt_verbose)
-            fprintf(stderr, "now %ld %ld: Looking up %s\n",
+            fprintf(stderr, "now %lld %ld: Looking up %s\n",
                     now.tv_sec, (long) now.tv_usec/1000, sp->req.hname);
         rslave_writeRequest(rs, &sp->req);
         sp->deadline = now;
@@ -831,7 +831,7 @@ static int one_poll_loop(struct rslave_s* rs, struct s
 
                 if (result.err) {
                     if (opt_verbose)
-                        fprintf(stderr, "now %ld %ld: %s not found\n",
+                        fprintf(stderr, "now %lld %ld: %s not found\n",
                                 now.tv_sec, (long) now.tv_usec/1000,
                                 sp->req.hname);
                     sp->status = STATE_DONE;
