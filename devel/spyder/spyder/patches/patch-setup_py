$OpenBSD$

Index: setup.py
--- setup.py.orig
+++ setup.py
@@ -19,7 +19,7 @@ import subprocess
 import sys
 import shutil
 
-from distutils.core import setup
+from setuptools import setup
 from distutils.command.install_data import install_data
 
 
@@ -74,14 +74,14 @@ def get_subpackages(name):
 
 def get_data_files():
     """Return data_files in a platform dependent manner"""
-    if sys.platform.startswith('linux'):
+    if sys.platform.startswith(('linux', 'openbsd')):
         if PY3:
             data_files = [('share/applications', ['scripts/spyder3.desktop']),
-                          ('share/icons', ['img_src/spyder3.png']),
+                          ('share/icons/hicolor/48x48/apps', ['img_src/spyder3.png']),
                           ('share/metainfo', ['scripts/spyder3.appdata.xml'])]
         else:
             data_files = [('share/applications', ['scripts/spyder.desktop']),
-                          ('share/icons', ['img_src/spyder.png'])]
+                          ('share/icons/hicolor/48x48/apps', ['img_src/spyder.png'])]
     elif os.name == 'nt':
         data_files = [('scripts', ['img_src/spyder.ico',
                                    'img_src/spyder_reset.ico'])]
@@ -124,7 +124,7 @@ CMDCLASS = {'install_data': MyInstallData}
 # NOTE: the '[...]_win_post_install.py' script is installed even on non-Windows
 # platforms due to a bug in pip installation process (see Issue 1158)
 SCRIPTS = ['%s_win_post_install.py' % NAME]
-if PY3 and sys.platform.startswith('linux'):
+if PY3 and sys.platform.startswith(('linux', 'openbsd')):
     SCRIPTS.append('spyder3')
 else:
     SCRIPTS.append('spyder')
@@ -202,14 +202,14 @@ install_requires = [
     'psutil',
     'qtawesome>=0.4.1',
     'qtpy>=1.2.0',
-    'pickleshare',
+    # 'pickleshare',
     'pyzmq',
     'chardet>=2.0.0',
     'numpydoc',
     'keyring',
     # Packages for pyqt5 are only available in
     # Python 3
-    'pyqt5<5.10;python_version>="3"',
+    # 'pyqt5<5.10;python_version>="3"',
     'spyder-kernels<1.0'
 ]
 
