$OpenBSD: patch-bootstrap,v 1.18 2018/06/14 17:04:45 sthen Exp $

Use Ninja to build CMake
XXX: broken on m88k

Index: bootstrap
--- bootstrap.orig
+++ bootstrap
@@ -166,7 +166,11 @@ if ${cmake_system_mingw}; then
   cmake_bootstrap_generator="MSYS Makefiles"
 else
   # Bootstrapping from a standard UNIX prompt.
-  cmake_bootstrap_generator="Unix Makefiles"
+  if arch -s | grep -q '^m88k'; then
+    cmake_bootstrap_generator="Unix Makefiles"
+  else
+    cmake_bootstrap_generator="Ninja"
+  fi
 fi
 
 # Choose tools and extensions for this platform.
@@ -225,9 +229,9 @@ cmake_doc_dir_default="`cmake_install_dest_default DOC
 cmake_man_dir_default="`cmake_install_dest_default MAN ${cmake_man_dir_keyword}`"
 cmake_xdgdata_dir_default="`cmake_install_dest_default XDGDATA ${cmake_xdgdata_dir_keyword}`"
 
-CMAKE_KNOWN_C_COMPILERS="cc gcc clang xlc icc tcc"
-CMAKE_KNOWN_CXX_COMPILERS="aCC xlC CC g++ clang++ c++ icc como "
-CMAKE_KNOWN_MAKE_PROCESSORS="gmake make"
+CMAKE_KNOWN_C_COMPILERS="cc"
+CMAKE_KNOWN_CXX_COMPILERS="c++"
+CMAKE_KNOWN_MAKE_PROCESSORS="make"
 
 CMAKE_PROBLEMATIC_FILES="\
   CMakeCache.txt \
@@ -280,6 +284,7 @@ CMAKE_CXX_SOURCES="\
   cmContinueCommand \
   cmCoreTryCompile \
   cmCreateTestSourceList \
+  cmCryptoHash \
   cmCustomCommand \
   cmCustomCommandGenerator \
   cmDefinePropertyCommand \
@@ -311,6 +316,7 @@ CMAKE_CXX_SOURCES="\
   cmFindPathCommand \
   cmFindProgramCommand \
   cmForEachCommand \
+  cmFortranParserImpl
   cmFunctionCommand \
   cmFSPermissions \
   cmGeneratedFileStream \
@@ -332,6 +338,7 @@ CMAKE_CXX_SOURCES="\
   cmGetTestPropertyCommand \
   cmGlobalCommonGenerator \
   cmGlobalGenerator \
+  cmGlobalNinjaGenerator \
   cmGlobalUnixMakefileGenerator3 \
   cmGlobVerificationManager \
   cmHexFileConverter \
@@ -355,10 +362,12 @@ CMAKE_CXX_SOURCES="\
   cmLinkDirectoriesCommand \
   cmLinkItem \
   cmLinkLineComputer \
+  cmLinkLineDeviceComputer \
   cmListCommand \
   cmListFileCache \
   cmLocalCommonGenerator \
   cmLocalGenerator \
+  cmLocalNinjaGenerator \
   cmLocalUnixMakefileGenerator3 \
   cmMSVC60LinkLineComputer \
   cmMacroCommand \
@@ -373,6 +382,10 @@ CMAKE_CXX_SOURCES="\
   cmMessageCommand \
   cmMessenger \
   cmNewLineStyle \
+  cmNinjaLinkLineComputer \
+  cmNinjaNormalTargetGenerator \
+  cmNinjaTargetGenerator \
+  cmNinjaUtilityTargetGenerator \
   cmOSXBundleGenerator \
   cmOptionCommand \
   cmOrderDirectories \
@@ -444,6 +457,8 @@ LexerParser_CXX_SOURCES="\
   cmCommandArgumentParser \
   cmExprLexer \
   cmExprParser \
+  cmFortranLexer \
+  cmFortranParser \
 "
 
 LexerParser_C_SOURCES="\
@@ -924,6 +939,11 @@ if ${cmake_system_cygwin}; then
   cmake_ld_flags="${LDFLAGS} -Wl,--enable-auto-import"
 fi
 
+# Add OpenBSD-specific flags
+if ${cmake_system_OpenBSD}; then
+  cmake_ld_flags="${LDFLAGS} -L${cmake_prefix_dir}/lib"
+fi
+
 # Add CoreFoundation framework on Darwin
 if ${cmake_system_darwin}; then
   cmake_ld_flags="${LDFLAGS} -framework CoreFoundation"
@@ -1377,6 +1397,9 @@ else
     *kFreeBSD*)
       libs="${libs} -lkvm -lfreebsd-glue"
       ;;
+    *OpenBSD*)
+      libs="${libs} -lkvm -lrhash -ljsoncpp"
+      ;;
     *BSD*)
       libs="${libs} -lkvm"
       ;;
@@ -1430,7 +1453,8 @@ cmake_cxx_flags="${cmake_cxx_flags} \
   -I`cmake_escape \"${cmake_bootstrap_dir}\"` \
   -I`cmake_escape \"${cmake_source_dir}/Source\"` \
   -I`cmake_escape \"${cmake_source_dir}/Source/LexerParser\"` \
-  -I`cmake_escape \"${cmake_source_dir}/Utilities\"`"
+  -I`cmake_escape \"${cmake_source_dir}/Utilities\"` \
+  -I`cmake_escape \"${cmake_prefix_dir}/include\"`"
 echo "cmake: ${objs}" > "${cmake_bootstrap_dir}/Makefile"
 echo "	${cmake_cxx_compiler} ${cmake_ld_flags} ${cmake_cxx_flags} ${objs} ${libs} -o cmake" >> "${cmake_bootstrap_dir}/Makefile"
 for a in ${CMAKE_CXX_SOURCES}; do
