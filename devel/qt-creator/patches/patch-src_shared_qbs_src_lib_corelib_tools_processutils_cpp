$OpenBSD$
--- src/shared/qbs/src/lib/corelib/tools/processutils.cpp.orig	Fri Aug 14 10:58:37 2015
+++ src/shared/qbs/src/lib/corelib/tools/processutils.cpp	Sun Oct  4 12:31:45 2015
@@ -41,9 +41,16 @@
 #   include <unistd.h>
 #   include <cstdio>
 #elif defined(Q_OS_BSD4)
-#   include <libutil.h>
-#   include <sys/types.h>
-#   include <sys/user.h>
+#   if defined(Q_OS_OPENBSD)
+#       include <sys/param.h>
+#       include <sys/sysctl.h>
+#       include <fcntl.h>
+#       include <kvm.h>
+#   else
+#       include <util.h>
+#       include <sys/types.h>
+#       include <sys/user.h>
+#   endif
 #else
 #   error Missing implementation of processNameByPid for this platform.
 #endif
@@ -82,12 +89,23 @@ QString processNameByPid(qint64 pid)
     readlink(exePath, buf, sizeof(buf));
     return FileInfo::fileName(QString::fromUtf8(buf));
 #elif defined(Q_OS_BSD4)
+# if defined(Q_OS_OPENBSD)
+    kvm_t *kd = kvm_open(NULL, NULL, NULL, KVM_NO_FILES, NULL);
+    if (kd == NULL)
+        return QString();
+    int cnt;
+    struct kinfo_proc *kp = kvm_getprocs(kd, KERN_PROC_PID, pid, sizeof(*kp), &cnt);
+    if (kp == NULL)
+        return QString();
+    return QString::fromUtf8(kp->p_comm);
+# else
     kinfo_proc *proc = kinfo_getproc(pid);
     if (!proc)
         return QString();
     QString name = QString::fromUtf8(proc->ki_comm);
     free(proc);
     return name;
+# endif // defined(Q_OS_OPENBSD)
 #else
     return QString();
 #endif
