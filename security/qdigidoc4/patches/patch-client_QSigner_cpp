Index: client/QSigner.cpp
--- client/QSigner.cpp.orig
+++ client/QSigner.cpp
@@ -70,7 +70,7 @@ class QSigner::Private (public)
 	static ECDSA_SIG* ecdsa_do_sign(const unsigned char *dgst, int dgst_len,
 		const BIGNUM *inv, const BIGNUM *rp, EC_KEY *eckey);
 
-#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 	RSA_METHOD		rsamethod = *RSA_get_default_method();
 	ECDSA_METHOD	*ecmethod = ECDSA_METHOD_new(nullptr);
 #else
@@ -123,7 +123,7 @@ QSigner::QSigner( ApiType api, QObject *parent )
 	: QThread(parent)
 	, d(new Private)
 {
-#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 	d->rsamethod.name = "QSmartCard";
 	d->rsamethod.rsa_sign = Private::rsa_sign;
 	d->rsamethod.flags |= RSA_FLAG_SIGN_VER;
@@ -317,7 +317,7 @@ QSslKey QSigner::key() const
 	else
 	{
 		RSA *rsa = (RSA*)key.handle();
-#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 		RSA_set_method(rsa, &d->rsamethod);
 		rsa->flags |= RSA_FLAG_SIGN_VER;
 #else
