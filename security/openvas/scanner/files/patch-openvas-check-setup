--- openvas-check-setup.orig	Thu Oct 30 20:10:28 2014
+++ openvas-check-setup	Sat Nov  8 23:42:45 2014
@@ -27,7 +27,8 @@
 # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 
 LOG=/tmp/openvas-check-setup.log
-CHECKVERSION=2.2.6
+CHECKVERSION="2.2.6 (Modified for OpenBSD)"
+OS=`uname -s`
 
 if [ "$1" = "--server" -o "$2" = "--server" ]
 then
@@ -157,7 +158,12 @@
 # LOG start
 echo "openvas-check-setup $CHECKVERSION" > $LOG
 echo "  Mode:  $MODE" >> $LOG
-echo "  Date: " `date -R` >> $LOG
+if [ $OS == "OpenBSD" ]
+then 
+  echo "  Date: " `env LC_TIME=en_US date +"%a, %d %b %Y %H:%M:%S %z"` >> $LOG
+else
+  echo "  Date: " `date -R"` >> $LOG
+fi
 echo "" >> $LOG
 
 
@@ -311,7 +317,12 @@
   log_and_print "ERROR: No OpenVAS Manager database found. (Tried: $TASKSDB)"
   log_and_print "FIX: Run 'openvasmd --rebuild' while OpenVAS Scanner is running."
 
-  OPENVASSD_RUNNING=`ps -Af | grep "openvassd: [Ww]aiting for incoming connections" | grep -v grep | wc -l`
+  if [ $OS == "OpenBSD"]
+  then
+    OPENVASSD_RUNNING=`ps -Ax | grep "openvassd: [Ww]aiting for incoming connections" | grep -v grep | wc -l`
+  else
+    OPENVASSD_RUNNING=`ps -Af | grep "openvassd: [Ww]aiting for incoming connections" | grep -v grep | wc -l`
+  fi
   if [ $OPENVASSD_RUNNING -eq 0 ]
   then
     log_and_print "WARNING: OpenVAS Scanner is NOT running!" ;
@@ -325,7 +336,12 @@
 log_and_print "OK: OpenVAS Manager database found in $TASKSDB."
 
 echo "Checking access rights of OpenVAS Manager database ..." >> $LOG
-TASKSDBPERMS=`stat -c "%a" "$TASKSDB"`
+if [ $OS == "OpenBSD" ]
+then
+  TASKSDBPERMS=`stat -f "%0Lp" "$TASKSDB"`
+else
+  TASKSDBPERMS=`stat -c "%a" "$TASKSDB"`
+fi
 if [ "$TASKSDBPERMS" != "600" ]
 then
   log_and_print "ERROR: The access rights of the OpenVAS Manager database are incorrect."
@@ -386,7 +402,12 @@
     log_and_print "ERROR: The number of NVTs in the OpenVAS Manager database is too low."
     log_and_print "FIX: Make sure OpenVAS Scanner is running with an up-to-date NVT collection and run 'openvasmd --rebuild'."
 
-    OPENVASSD_RUNNING=`ps -Af | grep "openvassd: waiting for incoming connections" | grep -v grep | wc -l`
+    if [ $OS == "OpenBSD" ]
+    then
+      OPENVASSD_RUNNING=`ps -Ax | grep "openvassd: [Ww]aiting for incoming connections" | grep -v grep | wc -l`
+    else
+      OPENVASSD_RUNNING=`ps -Af | grep "openvassd: [Ww]aiting for incoming connections" | grep -v grep | wc -l`
+    fi
     if [ $OPENVASSD_RUNNING -eq 0 ]
     then
       log_and_print "WARNING: OpenVAS Scanner is NOT running!" ;
@@ -638,20 +659,38 @@
 
 if [ $HAVE_NETSTAT -eq 1 ]
 then
-  netstat -A inet -ntlp 2> /dev/null >> $LOG
-  OPENVASSD_HOST=`netstat -A inet -ntlp 2> /dev/null | grep openvassd | awk -F\  '{print $4}' | awk -F: '{print $1}'`
-  OPENVASSD_PORT=`netstat -A inet -ntlp 2> /dev/null | grep openvassd | awk -F\  '{print $4}' | awk -F: '{print $2}'`
-  OPENVASMD_HOST=`netstat -A inet -ntlp 2> /dev/null | grep openvasmd | awk -F\  '{print $4}' | awk -F: '{print $1}'`
-  OPENVASMD_PORT=`netstat -A inet -ntlp 2> /dev/null | grep openvasmd | awk -F\  '{print $4}' | awk -F: '{print $2}'`
-  OPENVASAD_HOST=`netstat -A inet -ntlp 2> /dev/null | grep openvasad | awk -F\  '{print $4}' | awk -F: '{print $1}'`
-  OPENVASAD_PORT=`netstat -A inet -ntlp 2> /dev/null | grep openvasad | awk -F\  '{print $4}' | awk -F: '{print $2}'`
-  GSAD_HOST=`netstat -A inet -ntlp 2> /dev/null | grep gsad | awk -F\  '{print $4}' | awk -F: '{print $1}'`
-  GSAD_PORT=`netstat -A inet -ntlp 2> /dev/null | grep gsad | awk -F\  '{print $4}' | awk -F: '{print $2}'`
+  if [ $OS == "OpenBSD" ]
+  then
+    fstat -n | grep 'internet stream tcp.*:[1-9]' | grep -v -e '--' 2>/dev/null >>$LOG
+    OPENVASSD_HOST=`fstat -n | perl -n -e 'if (/openvassd .* tcp 0x[0-9a-f]+ ([*0-9][0-9\.]*):([1-9]\d+)$/) { print "$1\n"; }'`
+    OPENVASSD_PORT=`fstat -n | perl -n -e 'if (/openvassd .* tcp 0x[0-9a-f]+ ([*0-9][0-9\.]*):([1-9]\d+)$/) { print "$2\n"; }'`
+    OPENVASMD_HOST=`fstat -n | perl -n -e 'if (/openvasmd .* tcp 0x[0-9a-f]+ ([*0-9][0-9\.]*):([1-9]\d+)$/) { print "$1\n"; }'`
+    OPENVASMD_PORT=`fstat -n | perl -n -e 'if (/openvasmd .* tcp 0x[0-9a-f]+ ([*0-9][0-9\.]*):([1-9]\d+)$/) { print "$2\n"; }'`
+    OPENVASAD_HOST=`fstat -n | perl -n -e 'if (/openvasad .* tcp 0x[0-9a-f]+ ([*0-9][0-9\.]*):([1-9]\d+)$/) { print "$1\n"; }'`
+    OPENVASAD_PORT=`fstat -n | perl -n -e 'if (/openvasad .* tcp 0x[0-9a-f]+ ([*0-9][0-9\.]*):([1-9]\d+)$/) { print "$2\n"; }'`
+    GSAD_HOST=`fstat -n | perl -n -e 'if (/gsad .* tcp 0x[0-9a-f]+ ([*0-9][0-9\.]*):([1-9]\d+)$/) { print "$1\n"; }'`
+    GSAD_PORT=`fstat -n | perl -n -e 'if (/gsad .* tcp 0x[0-9a-f]+ ([*0-9][0-9\.]*):([1-9]\d+)$/) { print "$2\n"; }'`
+  else
+    netstat -A inet -ntlp 2> /dev/null >> $LOG
+    OPENVASSD_HOST=`netstat -A inet -ntlp 2> /dev/null | grep openvassd | awk -F\  '{print $4}' | awk -F: '{print $1}'`
+    OPENVASSD_PORT=`netstat -A inet -ntlp 2> /dev/null | grep openvassd | awk -F\  '{print $4}' | awk -F: '{print $2}'`
+    OPENVASMD_HOST=`netstat -A inet -ntlp 2> /dev/null | grep openvasmd | awk -F\  '{print $4}' | awk -F: '{print $1}'`
+    OPENVASMD_PORT=`netstat -A inet -ntlp 2> /dev/null | grep openvasmd | awk -F\  '{print $4}' | awk -F: '{print $2}'`
+    OPENVASAD_HOST=`netstat -A inet -ntlp 2> /dev/null | grep openvasad | awk -F\  '{print $4}' | awk -F: '{print $1}'`
+    OPENVASAD_PORT=`netstat -A inet -ntlp 2> /dev/null | grep openvasad | awk -F\  '{print $4}' | awk -F: '{print $2}'`
+    GSAD_HOST=`netstat -A inet -ntlp 2> /dev/null | grep gsad | awk -F\  '{print $4}' | awk -F: '{print $1}'`
+    GSAD_PORT=`netstat -A inet -ntlp 2> /dev/null | grep gsad | awk -F\  '{print $4}' | awk -F: '{print $2}'`
+  fi
 
   case "$OPENVASSD_HOST" in
-    "0.0.0.0") log_and_print "OK: OpenVAS Scanner is running and listening on all interfaces." ;;
+    "0.0.0.0"|"*") log_and_print "OK: OpenVAS Scanner is running and listening on all interfaces." ;;
     "127.0.0.1") log_and_print "OK: OpenVAS Scanner is running and listening only on the local interface." ;;
-    "") OPENVASSD_PROC=`ps -Af | grep "openvassd: waiting for incoming connections" | grep -v grep | wc -l`
+    "") if [ $OS == "OpenBSD" ] 
+        then
+          OPENVASSD_PROC=`ps -Ax | grep "openvassd: [Ww]aiting for incoming connections" | grep -v grep | wc -l`
+        else
+          OPENVASSD_PROC=`ps -Af | grep "openvassd: [Ww]aiting for incoming connections" | grep -v grep | wc -l`
+        fi
         if [ $OPENVASSD_PROC -eq 0 ]
         then
           log_and_print "ERROR: OpenVAS Scanner is NOT running!" ;
@@ -673,12 +712,12 @@
   esac
 
   case "$OPENVASMD_HOST" in
-    "0.0.0.0") log_and_print "OK: OpenVAS Manager is running and listening on all interfaces." ;;
-    "127.0.0.1") log_and_print "WARNING: OpenVAS Manager is running and listening only on the local interface."
-                 log_and_print "This means that you will not be able to access the OpenVAS Manager from the"
-                 log_and_print "outside using GSD or OpenVAS CLI."
-                 log_and_print "SUGGEST: Ensure that OpenVAS Manager listens on all interfaces unless you want"
-                 log_and_print "a local service only." ;;
+    "0.0.0.0"|"*") log_and_print "WARNING: OpenVAS Manager is running and listening on all interfaces." 
+                 log_and_print "This means that you will be able to access the OpenVAS Manager from the"
+                 log_and_print "outside using GSAD or OpenVAS CLI."
+                 log_and_print "SUGGEST: Ensure that OpenVAS Manager listens on local interfaces, if you want"
+                 log_and_print "access from elsewhere use something like ssh port forwarding." ;;
+    "127.0.0.1") log_and_print "OK: OpenVAS Manager is running and listening only on the local interface." ;;
     "") log_and_print "ERROR: OpenVAS Manager is NOT running!"
         log_and_print "FIX: Start OpenVAS Manager (openvasmd)."
         OPENVASMD_PORT=-1 ;;
@@ -693,7 +732,7 @@
   if [ $ADMINISTRATOR_MAJOR != "0" ]
   then
     case "$OPENVASAD_HOST" in
-      "0.0.0.0") log_and_print "OK: OpenVAS Administrator is running and listening on all interfaces." ;;
+      "0.0.0.0"|"*") log_and_print "OK: OpenVAS Administrator is running and listening on all interfaces." ;;
       "127.0.0.1") log_and_print "OK: OpenVAS Administrator is running and listening only on the local interface." ;;
       "") log_and_print "ERROR: OpenVAS Administrator is NOT running!"
           log_and_print "FIX: Start OpenVAS Administrator (openvasad)."
@@ -710,23 +749,25 @@
   fi
 
   case "$GSAD_HOST" in
-    "0.0.0.0") log_and_print "OK: Greenbone Security Assistant is running and listening on all interfaces." ;;
-    "127.0.0.1") log_and_print "WARNING: Greenbone Security Assistant is running and listening only on the local interface."
-                 log_and_print "This means that you will not be able to access the Greenbone Security Assistant from the"
-                 log_and_print "outside using a web browser."
-                 log_and_print "SUGGEST: Ensure that Greenbone Security Assistant listens on all interfaces." ;;
+    "0.0.0.0"|"*") log_and_print "WARNING: Greenbone Security Assistant is running and listening on all interfaces."
+                 log_and_print "This means that you will be able to access the Greenbone Security Assistant from the"
+                 log_and_print "outside using a browser."
+                 log_and_print "SUGGEST: Ensure that OpenVAS Manager listens on local interfaces, if you want"
+                 log_and_print "access from elsewhere use something like ssh port forwarding." ;;
+    "127.0.0.1") log_and_print "OK: Greenbone Security Assistant is running and listening only on the local interface." ;;
     "") log_and_print "ERROR: Greenbone Security Assistant is NOT running!"
         log_and_print "FIX: Start Greenbone Security Assistant (gsad)."
         GSAD_PORT=-1 ;;
   esac
   case $GSAD_PORT in
     -1) ;;
+    8080|8443) log_and_print "OK: Greenbone Security Assistant is listening on port $GSAD_PORT, which is the default port." ;;
     80|443|9392) log_and_print "OK: Greenbone Security Assistant is listening on port $GSAD_PORT, which is the default port." ;;
     *) log_and_print "WARNING: Greenbone Security Assistant is listening on port $GSAD_PORT, which is NOT the default port!"
        log_and_print "SUGGEST: Ensure Greenbone Security Assistant is listening on one of the following ports: 80, 443, 9392." ;;
   esac
 
-if [ $OPENVASSD_PORT -eq -1 ] || [ $OPENVASMD_PORT -eq -1 ] || [ $OPENVASAD_PORT -eq -1 ] || [ $GSAD_PORT -eq -1 ]
+  if [ $OPENVASSD_PORT -eq -1 ] || [ $OPENVASMD_PORT -eq -1 ] || [ $OPENVASAD_PORT -eq -1 ] || [ $GSAD_PORT -eq -1 ]
   then
     check_failed
   fi
