$OpenBSD$
--- src/tun.c.orig	Sat Jan 10 23:45:51 2015
+++ src/tun.c	Sat Feb 14 17:05:36 2015
@@ -25,7 +25,10 @@
 #include <arpa/inet.h>
 #include <sys/socket.h>
 #include <net/if.h>
+#include <netinet/in.h>
+#include <netinet/ip.h>
 #include <sys/ioctl.h>
+#include <sys/uio.h>
 #include <stdio.h>
 #include <string.h>
 #include <stdlib.h>
@@ -45,10 +48,13 @@
 #include <main.h>
 #include <ccan/list/list.h>
 
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
 # include <net/if_var.h>
 # include <netinet/in_var.h>
 #endif
+#if defined(__OpenBSD__)
+# include <netinet6/in6_var.h>
+#endif
 
 #ifdef __linux__
 
@@ -177,7 +183,7 @@ int set_ipv6_addr(main_server_st * s, struct proc_st *
 	memset(&ifr, 0, sizeof(ifr));
 	ifr.ifr_addr.sa_family = AF_INET6;
 	ifr.ifr_flags |= IFF_UP | IFF_RUNNING;
-	strlcpy(ifr.ifr_name, oroc->tun_lease.name, IFNAMSIZ);
+	strlcpy(ifr.ifr_name, proc->tun_lease.name, IFNAMSIZ);
 
 	ret = ioctl(fd, SIOCSIFFLAGS, &ifr);
 	if (ret != 0) {
@@ -318,6 +324,44 @@ static int set_network_info(main_server_st * s, struct
 
 #include <ccan/hash/hash.h>
 
+#ifndef __linux__
+static int bsd_open_tun(void)
+{
+        int fd;
+        int s;
+	char tun_name[80];
+        struct ifreq ifr;
+	int unit_nr = 0;
+
+        fd = open("/dev/tun", O_RDWR);
+        if (fd == -1) {
+        	/* try iterating */
+		for (unit_nr = 0; unit_nr < 255; unit_nr++) {
+			snprintf(tun_name, sizeof(tun_name), "/dev/tun%d", unit_nr);
+			fd = open(tun_name, O_RDWR);
+# ifdef SIOCIFCREATE
+			if (fd == -1) {
+				/* cannot open tunXX, try creating it */
+		                s = socket(AF_INET, SOCK_DGRAM, 0);
+		                if (s < 0)
+		                        return -1;
+
+		                memset(&ifr, 0, sizeof(ifr));
+		                strncpy(ifr.ifr_name, tun_name + 5, sizeof(ifr.ifr_name) - 1);
+		                if (!ioctl(s, SIOCIFCREATE, &ifr))
+                		        fd = open(tun_name, O_RDWR);
+		                close(s);
+			}
+# endif
+			if (fd >= 0)
+				break;
+		}
+        }
+
+        return fd;
+}
+#endif
+
 int open_tun(main_server_st * s, struct proc_st *proc)
 {
 	int tunfd, ret, e;
@@ -391,7 +435,7 @@ int open_tun(main_server_st * s, struct proc_st *proc)
 	}
 #endif
 #else				/* freebsd */
-	tunfd = open("/dev/tun", O_RDWR);
+	tunfd = bsd_open_tun();
 	if (tunfd < 0) {
 		int e = errno;
 		mslog(s, NULL, LOG_ERR, "Can't open /dev/tun: %s\n",
@@ -445,7 +489,7 @@ void close_tun(main_server_st * s, struct proc_st *pro
 	}
 
 #ifdef SIOCIFDESTROY
-	int e;
+	int e, ret;
 	struct ifreq ifr;
 
 	if (proc->tun_lease.name[0] != 0) {
@@ -469,4 +513,65 @@ void close_tun(main_server_st * s, struct proc_st *pro
 		close(fd);
 
 	return;
+}
+
+#if defined(__OpenBSD__) || defined(TUNSIFHEAD)
+# define TUN_AF_PREFIX 1
+#endif
+ssize_t tun_write(int sockfd, const void *buf, size_t len)
+{
+#ifdef TUN_AF_PREFIX
+	struct ip *iph = (void *)buf;
+	uint32_t head;
+	const uint8_t *data = buf;
+	static int complained = 0;
+	struct iovec iov[2];
+	int ret;
+
+	if (iph->ip_v == 6)
+		head = htonl(AF_INET6);
+	else if (iph->ip_v == 4)
+		head = htonl(AF_INET); 
+	else {
+		if (!complained) {
+			complained = 1;
+			syslog(LOG_ERR, "tun_write: Unknown packet (len %d) received %02x %02x %02x %02x...\n",
+				(int)len, data[0], data[1], data[2], data[3]);
+		}
+		return -1;
+	}
+
+	iov[0].iov_base = &head;
+	iov[0].iov_len = sizeof(head);
+	iov[1].iov_base = (void*)buf;
+	iov[1].iov_len = len;
+
+	ret = writev(sockfd, iov, 2);
+	if (ret >= sizeof(uint32_t))
+		ret -= sizeof(uint32_t);
+	return ret;
+#else
+	return force_write(sockfd, buf, len);
+#endif
+}
+
+ssize_t tun_read(int sockfd, void *buf, size_t len)
+{
+#ifdef TUN_AF_PREFIX
+	uint32_t head;
+	struct iovec iov[2];
+	int ret;
+
+	iov[0].iov_base = &head;
+	iov[0].iov_len = sizeof(head);
+	iov[1].iov_base = buf;
+	iov[1].iov_len = len;
+
+	ret = readv(sockfd, iov, 2);
+	if (ret >= sizeof(uint32_t))
+		ret -= sizeof(uint32_t);
+	return ret;
+#else
+	return read(sockfd, buf, len);
+#endif
 }
