$OpenBSD$
--- src/tun.c.orig	Sun Sep 18 13:07:49 2005
+++ src/tun.c	Thu Sep  7 13:53:28 2006
@@ -46,7 +46,7 @@
 #include <linux/netlink.h>
 #include <linux/rtnetlink.h>
 
-#elif defined (__FreeBSD__)
+#elif defined (__FreeBSD__) || defined (__OpenBSD__) || defined (__NetBSD__)
 #include <net/if.h>
 #include <net/if_tun.h>
 
@@ -334,7 +334,7 @@ int tun_addaddr(struct tun_t *this,
   this->addrs++;
   return 0;
 
-#elif defined (__FreeBSD__) || defined (__APPLE__)
+#elif defined (__FreeBSD__) || defined (__APPLE__) || defined (__OpenBSD__) || defined (__NetBSD__)
 
   int fd;
   struct ifaliasreq      areq;
@@ -413,7 +413,7 @@ int tun_setaddr(struct tun_t *this,
 #if defined(__linux__)
   ifr.ifr_netmask.sa_family = AF_INET;
 
-#elif defined(__FreeBSD__) || defined (__APPLE__)
+#elif defined(__FreeBSD__) || defined (__APPLE__) || defined (__OpenBSD__) || defined (__NetBSD__)
   ((struct sockaddr_in *) &ifr.ifr_addr)->sin_len = 
     sizeof (struct sockaddr_in);
   ((struct sockaddr_in *) &ifr.ifr_dstaddr)->sin_len = 
@@ -465,7 +465,7 @@ int tun_setaddr(struct tun_t *this,
     ((struct sockaddr_in *) &ifr.ifr_netmask)->sin_addr.s_addr = 
       netmask->s_addr;
 
-#elif defined(__FreeBSD__) || defined (__APPLE__)
+#elif defined(__FreeBSD__) || defined (__APPLE__) || defined (__OpenBSD__) || defined (__NetBSD__)
     ((struct sockaddr_in *) &ifr.ifr_addr)->sin_addr.s_addr = 
       netmask->s_addr;
 
@@ -494,7 +494,7 @@ int tun_setaddr(struct tun_t *this,
 
   tun_sifflags(this, IFF_UP | IFF_RUNNING);
 
-#if defined(__FreeBSD__) || defined (__APPLE__)
+#if defined(__FreeBSD__) || defined (__APPLE__) || defined (__OpenBSD__) || defined (__NetBSD__)
   tun_addroute(this, dstaddr, addr, netmask);
   this->routes = 1;
 #endif
@@ -553,7 +553,7 @@ int tun_route(struct tun_t *this,
   close(fd);
   return 0;
   
-#elif defined(__FreeBSD__) || defined (__APPLE__)
+#elif defined(__FreeBSD__) || defined (__APPLE__) || defined (__OpenBSD__) || defined (__NetBSD__)
 
 struct {
   struct rt_msghdr rt;
@@ -642,7 +642,7 @@ int tun_new(struct tun_t **tun)
 #if defined(__linux__)
   struct ifreq ifr;
 
-#elif defined(__FreeBSD__) || defined (__APPLE__)
+#elif defined(__FreeBSD__) || defined (__APPLE__) || defined (__OpenBSD__) || defined (__NetBSD__)
   char devname[IFNAMSIZ+5]; /* "/dev/" + ifname */
   int devnum;
   struct ifaliasreq areq;
@@ -690,7 +690,7 @@ int tun_new(struct tun_t **tun)
   ioctl((*tun)->fd, TUNSETNOCSUM, 1); /* Disable checksums */
   return 0;
   
-#elif defined(__FreeBSD__) || defined (__APPLE__)
+#elif defined(__FreeBSD__) || defined (__APPLE__) || defined (__OpenBSD__) || defined (__NetBSD__)
 
   /* Find suitable device */
   for (devnum = 0; devnum < 255; devnum++) { /* TODO 255 */ 
@@ -822,7 +822,7 @@ int tun_set_cb_ind(struct tun_t *this, 
 int tun_decaps(struct tun_t *this)
 {
 
-#if defined(__linux__) || defined (__FreeBSD__) || defined (__APPLE__)
+#if defined(__linux__) || defined (__FreeBSD__) || defined (__APPLE__) || defined (__OpenBSD__) || defined (__NetBSD__)
 
   unsigned char buffer[PACKET_MAX];
   int status;
@@ -832,8 +832,13 @@ int tun_decaps(struct tun_t *this)
     return -1;
   }
   
+  /* tun interface adds 4 bytes to front of packet under OpenBSD */
   if (this->cb_ind)
+#if defined (__OpenBSD__)
+    return this->cb_ind(this, buffer+4, status);
+#else
     return this->cb_ind(this, buffer, status);
+#endif
 
   return 0;
 
@@ -863,7 +868,17 @@ int tun_decaps(struct tun_t *this)
 int tun_encaps(struct tun_t *tun, void *pack, unsigned len)
 {
 
-#if defined(__linux__) || defined (__FreeBSD__) || defined (__APPLE__)
+#if defined (__OpenBSD__)
+
+  unsigned char buffer[PACKET_MAX+4];
+
+/* Can we user writev here to be more efficient??? */
+  *((long*)(&buffer))=htonl(AF_INET);
+  memcpy(&buffer[4], pack, PACKET_MAX);
+
+  return write(tun->fd, buffer, len+4);
+
+#elif defined(__linux__) || defined (__FreeBSD__) || defined (__APPLE__) || defined (__NetBSD__)
 
   return write(tun->fd, pack, len);
 
