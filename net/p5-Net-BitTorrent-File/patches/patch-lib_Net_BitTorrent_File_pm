$OpenBSD$
--- lib/Net/BitTorrent/File.pm.orig	Sun Jul 24 11:24:31 2005
+++ lib/Net/BitTorrent/File.pm	Sat Sep  8 14:56:46 2012
@@ -8,7 +8,7 @@ use Digest::SHA1 qw(sha1);
 BEGIN {
 	use Exporter ();
 	use vars qw ($VERSION @ISA @EXPORT @EXPORT_OK %EXPORT_TAGS);
-	$VERSION     = 1.02;
+	$VERSION     = 1.03;
 	@ISA         = qw (Exporter);
 	#Give a hoot don't pollute, do not export more than needed by default
 	@EXPORT      = qw ();
@@ -115,11 +115,34 @@ When called with no arguments returns the I<name> prop
 it sets it to I<$value>. If this value is changed, the I<info_hash> property needs
 to be regenerated.
 
+=item * comment( [$value] )
+
+When called with no arguments returns the I<comment> propertys current value, else
+it sets it to I<$value>. If this value is changed, the I<info_hash> property needs
+to be regenerated.
+
+=item * creation_date( [$epoch] )
+
+When called with no arguments returns the I<creation_date> propertys
+current value, else it sets it to I<$value>.
+
+=item * created_by( [$value] )
+
+When called with no arguments returns the I<created_by> propertys 
+current value, else it sets it to I<$value>.
+
+Defaults to "Net::BitTorrent::File $VERSION"
+
 =item * announce( [$value] )
 
 When called with no arguments returns the I<announce> propertys current value, else
 it sets it to I<$value>.
 
+=item * url_list( [$value] )
+
+When called with no arguments returns the I<url-list> propertys current value, 
+else it sets it to I<$value>.
+
 =item * piece_length( [$value] )
 
 When called with no arguments returns the I<piece_length> propertys current value, else
@@ -188,7 +211,10 @@ sub new
 {
 	my ($class, $file) = @_;
 
-	my $self = bless ({}, ref ($class) || $class);
+	my $self = bless ({ data => {
+		'created by'    => 'Net::BitTorrent::File ' . $VERSION,
+		'creation date' => time,
+	}}, ref ($class) || $class);
 
 	if(defined($file)) {
 		$self->load($file);
@@ -206,6 +232,33 @@ sub name {
 	return $self->{'data'}->{'info'}->{'name'};
 }
 
+sub comment {
+	my $self = shift;
+	my $comment = shift;
+	if(defined($comment)) {
+		$self->{'data'}->{'comment'} = $comment;
+	}
+	return $self->{'data'}->{'comment'};
+}
+
+sub creation_date {
+	my $self = shift;
+	my $creation_date = shift;
+	if(defined($creation_date)) {
+		$self->{'data'}->{'creation date'} = $creation_date;
+	}
+	return $self->{'data'}->{'creation date'};
+}
+
+sub created_by {
+	my $self = shift;
+	my $created_by = shift;
+	if(defined($created_by)) {
+		$self->{'data'}->{'created by'} = $created_by;
+	}
+	return $self->{'data'}->{'created by'};
+}
+
 sub announce {
 	my $self = shift;
 	my $announce = shift;
@@ -213,6 +266,15 @@ sub announce {
 		$self->{'data'}->{'announce'} = $announce;
 	}
 	return $self->{'data'}->{'announce'};
+}
+
+sub url_list {
+    my $self     = shift;
+    my $url_list = shift;
+    if ( defined($url_list) ) {
+        $self->{'data'}->{'url-list'} = $url_list;
+    }
+    return $self->{'data'}->{'url-list'};
 }
 
 sub piece_length {
