$OpenBSD$
--- src/corelib/io/qlockfile_unix.cpp.orig	Sun Jul 10 14:10:48 2016
+++ src/corelib/io/qlockfile_unix.cpp	Sun Jul 10 14:12:40 2016
@@ -64,6 +64,9 @@
 #   include <sys/cdefs.h>
 #   include <sys/param.h>
 #   include <sys/sysctl.h>
+# elif defined(Q_OS_OPENBSD)
+#   include <sys/param.h>
+#   include <sys/sysctl.h>
 # else
 #   include <libutil.h>
 # endif
@@ -275,6 +278,12 @@ QString QLockFilePrivate::processNameByPid(qint64 pid)
     if (sysctl(mib, 4, NULL, &len, NULL, 0) < 0)
         return QString();
     kinfo_proc *proc = static_cast<kinfo_proc *>(malloc(len));
+# elif defined(Q_OS_OPENBSD)
+    struct kinfo_proc kp, *proc = &kp;
+    int mib[6] = { CTL_KERN, KERN_PROC, KERN_PROC_PID, (int)pid, sizeof(struct kinfo_proc), 1 };
+    size_t len = 0;
+    if (sysctl(mib, 6, proc, &len, NULL, 0) < 0)
+        return QString();
 # else
     kinfo_proc *proc = kinfo_getproc(pid);
 # endif
@@ -290,7 +299,11 @@ QString QLockFilePrivate::processNameByPid(qint64 pid)
         return QString();
     }
 # endif
+# if defined(Q_OS_OPENBSD)
+    QString name = QFile::decodeName(proc->p_comm);
+# else
     QString name = QFile::decodeName(proc->ki_comm);
+# endif
     free(proc);
     return name;
 #else
