$OpenBSD$

Index: src/3rdparty/chromium/tools/gn/bootstrap/bootstrap.py
--- src/3rdparty/chromium/tools/gn/bootstrap/bootstrap.py.orig
+++ src/3rdparty/chromium/tools/gn/bootstrap/bootstrap.py
@@ -32,7 +32,8 @@ SRC_ROOT = os.path.dirname(os.path.dirname(GN_ROOT))
 is_win = sys.platform.startswith('win')
 is_linux = sys.platform.startswith('linux')
 is_mac = sys.platform.startswith('darwin')
-is_posix = is_linux or is_mac
+is_openbsd = sys.platform.startswith('openbsd')
+is_posix = is_linux or is_mac or is_openbsd
 
 def check_call(cmd, **kwargs):
   logging.debug('Running: %s', ' '.join(cmd))
@@ -553,6 +554,8 @@ def write_gn_ninja(path, root_gen_dir, options):
         'base/time/time_posix.cc',
         'base/trace_event/heap_profiler_allocation_register_posix.cc',
     ])
+
+  if is_posix and not is_openbsd:
     static_libraries['libevent'] = {
         'sources': [
             'base/third_party/libevent/buffer.c',
@@ -573,6 +576,38 @@ def write_gn_ninja(path, root_gen_dir, options):
         'include_dirs': [],
         'cflags': cflags + ['-DHAVE_CONFIG_H'],
     }
+
+
+  if is_openbsd:
+    ldflags.extend(['-lpthread', '-L/usr/local/lib', '-lexecinfo'])
+    include_dirs += ["/usr/local/include"]
+
+    static_libraries['xdg_user_dirs'] = {
+        'sources': [
+            'base/third_party/xdg_user_dirs/xdg_user_dir_lookup.cc',
+        ],
+        'tool': 'cxx',
+    }
+    static_libraries['base']['sources'].extend([
+        'base/callback_helpers.cc',
+        'base/memory/shared_memory_posix.cc',
+        'base/process/memory_stubs.cc',
+        'base/process/process_info_linux.cc',
+        'base/nix/xdg_util.cc',
+        'base/process/internal_linux.cc',
+        'base/process/process_handle_openbsd.cc',
+        'base/process/process_metrics_openbsd.cc',
+        'base/strings/sys_string_conversions_posix.cc',
+        'base/sys_info_openbsd.cc',
+        'base/threading/platform_thread_linux.cc',
+    ])
+    #static_libraries['libevent']['include_dirs'].extend([
+    #    os.path.join(SRC_ROOT, 'base', 'third_party', 'libevent', 'openbsd')
+    #])
+    #static_libraries['libevent']['sources'].extend([
+    #    'base/third_party/libevent/kqueue.c',
+    #])
+    libs.extend(['-levent'])
 
   if is_linux:
     libs.extend(['-lrt'])
