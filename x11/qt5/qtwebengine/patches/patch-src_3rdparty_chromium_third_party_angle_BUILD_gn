$OpenBSD$

Index: src/3rdparty/chromium/third_party/angle/BUILD.gn
--- src/3rdparty/chromium/third_party/angle/BUILD.gn.orig
+++ src/3rdparty/chromium/third_party/angle/BUILD.gn
@@ -38,7 +38,9 @@ compiler_gypi = exec_script("//build/gypi_to_gn.py",
 # This config is exported to dependent targets (and also applied to internal
 # ones).
 config("external_config") {
-  include_dirs = [ "include" ]
+  include_dirs = [
+    "include",
+  ]
 }
 
 # This config is applied to internal Angle targets (not pushed to dependents).
@@ -120,6 +122,9 @@ config("angle_release_asserts_config") {
 
 config("angle_common_config") {
   include_dirs = [ "src/common/third_party/numerics" ]
+  if (is_openbsd) {
+    include_dirs += [ "${X11BASE}/include" ]
+  }
 }
 
 static_library("angle_common") {
@@ -256,6 +261,7 @@ if (angle_use_commit_id) {
 config("libANGLE_config") {
   cflags = []
   defines = []
+  include_dirs = []
   if (angle_enable_d3d9) {
     defines += [ "ANGLE_ENABLE_D3D9" ]
   }
@@ -344,6 +350,7 @@ static_library("libANGLE") {
         "X11",
         "Xi",
         "Xext",
+        "GL",
       ]
     }
     if (is_mac) {
@@ -500,10 +507,6 @@ shared_library("angle_util") {
 
   if (is_linux) {
     sources += rebase_path(util_gypi.util_linux_sources, ".", "util")
-    libs = [
-      "rt",
-      "dl",
-    ]
   }
 
   if (is_mac) {
