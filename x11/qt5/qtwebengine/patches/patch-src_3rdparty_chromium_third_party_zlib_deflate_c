$OpenBSD: patch-src_3rdparty_chromium_third_party_zlib_deflate_c,v 1.1.1.1 2016/12/25 14:13:19 zhuk Exp $
Index: src/3rdparty/chromium/third_party/zlib/deflate.c
--- src/3rdparty/chromium/third_party/zlib/deflate.c.orig
+++ src/3rdparty/chromium/third_party/zlib/deflate.c
@@ -114,7 +114,7 @@ extern void ZLIB_INTERNAL copy_with_crc(z_streamp strm
 #endif
 
 /* Inline optimisation */
-local INLINE Pos insert_string_sse(deflate_state *const s, const Pos str);
+INLINE Pos insert_string_sse(deflate_state *const s, const Pos str);
 
 /* ===========================================================================
  * Local data
@@ -2208,38 +2208,4 @@ local block_state deflate_huff(s, flush)
     if (s->last_lit)
         FLUSH_BLOCK(s, 0);
     return block_done;
-}
-
-/* Safe to inline this as GCC/clang will use inline asm and Visual Studio will
- * use intrinsic without extra params
- */
-local INLINE Pos insert_string_sse(deflate_state *const s, const Pos str)
-{
-    Pos ret;
-    unsigned *ip, val, h = 0;
-
-    ip = (unsigned *)&s->window[str];
-    val = *ip;
-
-    if (s->level >= 6)
-        val &= 0xFFFFFF;
-
-/* Windows clang should use inline asm */
-#if defined(_MSC_VER) && !defined(__clang__)
-    h = _mm_crc32_u32(h, val);
-#elif defined(__i386__) || defined(__amd64__)
-    __asm__ __volatile__ (
-        "crc32 %1,%0\n\t"
-    : "+r" (h)
-    : "r" (val)
-    );
-#else
-    /* This should never happen */
-    assert(0);
-#endif
-
-    ret = s->head[h & s->hash_mask];
-    s->head[h & s->hash_mask] = str;
-    s->prev[str & s->w_mask] = ret;
-    return ret;
 }
