$OpenBSD$

Don't hardcode PATH to xrandr.
PR: https://github.com/nrocco/xprofile/pull/2

Only fail if edid or profile already exists.
ISSUE:https://github.com/nrocco/xprofile/issues/3

--- test/test_cli.py.orig	Tue Sep  9 23:02:04 2014
+++ test/test_cli.py	Tue Sep 30 15:56:54 2014
@@ -5,7 +5,9 @@ from mock import patch
 
 from xprofile.xrandr import Xrandr
 from xprofile.__main__ import main
+from distutils.spawn import find_executable
 
+xrandr_bin = find_executable('xrandr')
 
 @patch('xprofile.xrandr.Popen')
 def test_create_new_profile(Popen):
@@ -20,9 +22,37 @@ def test_create_new_profile(Popen):
 
         assert retval == 0
         assert Popen.called
-        assert Popen.call_args[0][0] == ['/usr/bin/xrandr', '--verbose']
+        assert Popen.call_args[0][0] == [xrandr_bin, '--verbose']
 
+@patch('xprofile.xrandr.Popen')
+def test_create_two_new_profiles(Popen):
+    with open('test/docked.txt', 'rb') as file1:
+        xrandr_stdout1 = file1.read()
 
+    with open('test/laptop.txt', 'rb') as file2:
+        xrandr_stdout2 = file2.read()
+
+    with tempfile.NamedTemporaryFile() as tmpfile:
+        Popen.return_value.communicate.return_value = (xrandr_stdout1, None)
+        Popen.return_value.wait.return_value = 0
+
+        retval = main(['--config', tmpfile.name, 'create', 'testprofile1'])
+
+        assert retval == 0
+        assert Popen.called
+        assert Popen.call_args[0][0] == [xrandr_bin, '--verbose']
+
+
+        Popen.return_value.communicate.return_value = (xrandr_stdout2, None)
+        Popen.return_value.wait.return_value = 0
+
+        retval = main(['--config', tmpfile.name, 'create', 'testprofile2'])
+
+        assert retval == 0
+        assert Popen.called
+        assert Popen.call_args[0][0] == [xrandr_bin, '--verbose']
+
+
 @patch('xprofile.xrandr.Popen')
 def test_create_new_profile_dryrun(Popen):
     with open('test/docked.txt', 'rb') as file:
@@ -36,7 +66,7 @@ def test_create_new_profile_dryrun(Popen):
 
         assert retval == 0
         assert Popen.called
-        assert Popen.call_args[0][0] == ['/usr/bin/xrandr', '--verbose']
+        assert Popen.call_args[0][0] == [xrandr_bin, '--verbose']
 
 
 @patch('xprofile.xrandr.Popen')
@@ -51,7 +81,7 @@ def test_create_existing_profile(Popen):
 
     assert retval == 1
     assert Popen.called
-    assert Popen.call_args[0][0] == ['/usr/bin/xrandr', '--verbose']
+    assert Popen.call_args[0][0] == [xrandr_bin, '--verbose']
 
 def test_list():
     main(['--config', 'test/xprofilerc_example', 'list'])
@@ -81,7 +111,7 @@ def test_activate_profile(Popen):
     assert retval == 0
     assert Popen.called
     assert Popen.call_args[0][0] == [
-        '/usr/bin/xrandr',
+        xrandr_bin,
         '--output', 'LVDS1', '--off',
         '--output', 'DP2', '--mode', '1920x1080', '--pos', '0x500', '--primary',
         '--output', 'HDMI3', '--mode', '1920x1080', '--rotate', 'left', '--pos', '1930x0'
@@ -106,7 +136,7 @@ def test_activate_profile_auto(Popen):
 
     assert retval == 0
     assert Popen.called
-    assert Popen.call_args[0][0] == ['/usr/bin/xrandr', '--auto']
+    assert Popen.call_args[0][0] == [xrandr_bin, '--auto']
 
 
 @patch('xprofile.xrandr.Popen')
@@ -121,7 +151,7 @@ def test_activate_profile_auto__dryrun(Popen):
 
     assert retval == 0
     assert Popen.called
-    assert Popen.call_args[0][0] == ['/usr/bin/xrandr', '--verbose']
+    assert Popen.call_args[0][0] == [xrandr_bin, '--verbose']
 
 
 @patch('xprofile.xrandr.Popen')
@@ -136,4 +166,4 @@ def test_activate_profile_auto_nonexistent(Popen):
 
     assert retval == 0
     assert Popen.called
-    assert Popen.call_args[0][0] == ['/usr/bin/xrandr', '--auto']
+    assert Popen.call_args[0][0] == [xrandr_bin, '--auto']
