$OpenBSD$

Don't hardcode PATH to xrandr.
PR: https://github.com/nrocco/xprofile/pull/2

--- test/test_xrandr.py.orig	Tue Sep 30 14:53:13 2014
+++ test/test_xrandr.py	Tue Sep 30 14:53:35 2014
@@ -1,7 +1,9 @@
 # -*- coding: utf-8 -*-
 from mock import patch
 from xprofile.xrandr import Xrandr
+from distutils.spawn import find_executable
 
+xrandr_bin = find_executable('xrandr')
 
 @patch('xprofile.xrandr.Popen')
 def test_call_xrandr_failure(Popen):
@@ -16,7 +18,7 @@ def test_call_xrandr_failure(Popen):
         assert False, 'Failed to raise RuntimeError'
 
     assert Popen.called
-    assert Popen.call_args[0][0] == ['/usr/bin/xrandr', '--verbose']
+    assert Popen.call_args[0][0] == [xrandr_bin, '--verbose']
 
 
 @patch('xprofile.xrandr.Popen')
@@ -41,7 +43,7 @@ def test_xrandr_get_screen_multiple(Popen):
     screen = Xrandr().get_screen()
 
     assert Popen.called
-    assert Popen.call_args[0][0] == ['/usr/bin/xrandr', '--verbose']
+    assert Popen.call_args[0][0] == [xrandr_bin, '--verbose']
     assert len(screen['displays']) == 3
 
     assert screen['displays'][0]['name'] == 'VGA1'
@@ -92,7 +94,7 @@ def test_xrandr_get_screen_docked(Popen):
     screen = Xrandr().get_screen()
 
     assert Popen.called
-    assert Popen.call_args[0][0] == ['/usr/bin/xrandr', '--verbose']
+    assert Popen.call_args[0][0] == [xrandr_bin, '--verbose']
     assert len(screen['displays']) == 8
 
     for index in [0, 5, 6]:
@@ -148,7 +150,7 @@ def test_xrandr_get_screen_laptop(Popen):
     screen = Xrandr().get_screen()
 
     assert Popen.called
-    assert Popen.call_args[0][0] == ['/usr/bin/xrandr', '--verbose']
+    assert Popen.call_args[0][0] == [xrandr_bin, '--verbose']
     assert len(screen['displays']) == 8
 
     assert screen['displays'][0]['name'] == 'LVDS1'
