$OpenBSD$
Modernize LibSpectre checks, to be sent upstream.
--- cmake/FindLibSpectre.cmake.orig	Fri Nov 30 11:31:01 2012
+++ cmake/FindLibSpectre.cmake	Thu Jan 10 14:42:55 2013
@@ -20,45 +20,25 @@ if(LIBSPECTRE_INCLUDE_DIR AND LIBSPECTRE_LIBRARY)
 else(LIBSPECTRE_INCLUDE_DIR AND LIBSPECTRE_LIBRARY)
 
 if(NOT WIN32)
-   # use pkg-config to get the directories and then use these values
-   # in the FIND_PATH() and FIND_LIBRARY() calls
-   INCLUDE(UsePkgConfig)
+  # use pkg-config to get the directories and then use these values
+  # in the FIND_PATH() and FIND_LIBRARY() calls
+  include(FindPkgConfig)
+  if(LIBSPECTRE_MINIMUM_VERSION)
+    pkg_check_modules(PC_LIBSPECTRE libspectre>=${LIBSPECTRE_MINIMUM_VERSION})
+  else(LIBSPECTRE_MINIMUM_VERSION)
+    pkg_check_modules(PC_LIBSPECTRE libspectre)
+  endif(LIBSPECTRE_MINIMUM_VERSION)
 
-   PKGCONFIG(libspectre _SpectreIncDir _SpectreLinkDir _SpectreLinkFlags _SpectreCflags)
-
-   if(_SpectreLinkFlags)
-     # find again pkg-config, to query it about libspectre version
-     FIND_PROGRAM(PKGCONFIG_EXECUTABLE NAMES pkg-config PATHS /usr/bin/ /usr/local/bin )
-
-     # query pkg-config asking for a libspectre >= LIBSPECTRE_MINIMUM_VERSION
-     EXEC_PROGRAM(${PKGCONFIG_EXECUTABLE} ARGS --atleast-version=${LIBSPECTRE_MINIMUM_VERSION} libspectre RETURN_VALUE _return_VALUE OUTPUT_VARIABLE _pkgconfigDevNull )
-     if(_return_VALUE STREQUAL "0")
-        set(LIBSPECTRE_FOUND TRUE)
-     endif(_return_VALUE STREQUAL "0")
-   endif(_SpectreLinkFlags)
+  find_library(LIBSPECTRE_LIBRARY NAMES libspectre spectre HINTS ${PC_LIBSPECTRE_LIBRARY_DIRS})
+  find_path(LIBSPECTRE_INCLUDE_DIR libspectre/spectre.h HINTS ${PC_LIBSPECTRE_INCLUDE_DIRS})
 else(NOT WIN32)
-    # do not use pkg-config on windows
-    find_library(_SpectreLinkFlags NAMES libspectre spectre PATHS ${CMAKE_LIBRARY_PATH})
-    
-    find_path(LIBSPECTRE_INCLUDE_DIR spectre.h PATH_SUFFIXES libspectre )
-    
-    set(LIBSPECTRE_FOUND TRUE)
+  # do not use pkg-config on windows
+  find_library(LIBSPECTRE_LIBRARY NAMES libspectre spectre PATHS ${CMAKE_LIBRARY_PATH})
+  find_path(LIBSPECTRE_INCLUDE_DIR libspectre/spectre.h)
 endif(NOT WIN32)
 
-if (LIBSPECTRE_FOUND)
-  set(LIBSPECTRE_LIBRARY ${_SpectreLinkFlags})
-
-  # the cflags for libspectre can contain more than one include path
-  separate_arguments(_SpectreCflags)
-  foreach(_includedir ${_SpectreCflags})
-    string(REGEX REPLACE "-I(.+)" "\\1" _includedir "${_includedir}")
-    set(LIBSPECTRE_INCLUDE_DIR ${LIBSPECTRE_INCLUDE_DIR} ${_includedir})
-  endforeach(_includedir)
-
-endif (LIBSPECTRE_FOUND)
-
 include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(LibSpectre DEFAULT_MSG LIBSPECTRE_LIBRARY LIBSPECTRE_FOUND)
+find_package_handle_standard_args(LibSpectre DEFAULT_MSG LIBSPECTRE_LIBRARY LIBSPECTRE_INCLUDE_DIR)
 
 # ensure that they are cached
 set(LIBSPECTRE_INCLUDE_DIR ${LIBSPECTRE_INCLUDE_DIR} CACHE INTERNAL "The libspectre include path")
