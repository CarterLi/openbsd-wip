$OpenBSD$
Unbreak build.

Index: test/i965_jpeg_test_data.h
--- test/i965_jpeg_test_data.h.orig
+++ test/i965_jpeg_test_data.h
@@ -60,21 +60,21 @@ namespace Decode {
     static const VAEntrypoint entrypoint = VAEntrypointVLD;
 
     static const HuffmanTable defaultHuffmanTable = {
-        load_huffman_table: { 0x01, 0x01 },
-        huffman_table: {
+        .load_huffman_table = { 0x01, 0x01 },
+        .huffman_table = {
             { // luminance
-                num_dc_codes: {
+                .num_dc_codes = {
                     0x00,0x01,0x05,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,
                     0x00,0x00,0x00,0x00
                 },
-                dc_values:    {
+                .dc_values =    {
                     0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b
                 },
-                num_ac_codes: {
+                .num_ac_codes = {
                     0x00,0x02,0x01,0x03,0x03,0x02,0x04,0x03,0x05,0x05,0x04,0x04,
                     0x00,0x00,0x01,0x7d
                 },
-                ac_values:    {
+                .ac_values =    {
                     0x01,0x02,0x03,0x00,0x04,0x11,0x05,0x12,0x21,0x31,0x41,0x06,
                     0x13,0x51,0x61,0x07,0x22,0x71,0x14,0x32,0x81,0x91,0xa1,0x08,
                     0x23,0x42,0xb1,0xc1,0x15,0x52,0xd1,0xf0,0x24,0x33,0x62,0x72,
@@ -90,21 +90,21 @@ namespace Decode {
                     0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,0xf1,0xf2,0xf3,0xf4,
                     0xf5,0xf6,0xf7,0xf8,0xf9,0xfa
                 },
-                pad: { 0x00, 0x00 }
+                .pad = { 0x00, 0x00 }
             },
             { // chrominance
-                num_dc_codes: {
+                .num_dc_codes = {
                     0x00,0x03,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,
                     0x00,0x00,0x00,0x00
                 },
-                dc_values:    {
+                .dc_values =    {
                     0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b
                 },
-                num_ac_codes: {
+                .num_ac_codes = {
                     0x00,0x02,0x01,0x02,0x04,0x04,0x03,0x04,0x07,0x05,0x04,0x04,
                     0x00,0x01,0x02,0x77
                 },
-                ac_values:    {
+                .ac_values =    {
                     0x00,0x01,0x02,0x03,0x11,0x04,0x05,0x21,0x31,0x06,0x12,0x41,
                     0x51,0x07,0x61,0x71,0x13,0x22,0x32,0x81,0x08,0x14,0x42,0x91,
                     0xa1,0xb1,0xc1,0x09,0x23,0x33,0x52,0xf0,0x15,0x62,0x72,0xd1,
@@ -120,14 +120,14 @@ namespace Decode {
                     0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,0xf2,0xf3,0xf4,
                     0xf5,0xf6,0xf7,0xf8,0xf9,0xfa,
                 },
-                pad: { 0x00, 0x00 }
+                .pad = { 0x00, 0x00 }
             }
         }
     };
 
     static const IQMatrix defaultIQMatrix = { /* Quality 100 */
-        load_quantiser_table: { 0x1,0x1,0x0,0x0 },
-        quantiser_table: {
+        .load_quantiser_table = { 0x1,0x1,0x0,0x0 },
+        .quantiser_table = {
             {
                 0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
                 0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
@@ -148,26 +148,26 @@ namespace Decode {
     };
 
     static const PictureParameter defaultPictureParameter = {
-        picture_width:  10,
-        picture_height: 10,
+        .picture_width =  10,
+        .picture_height = 10,
         /* component_id, h_sampling_factor, v_sampling_factor, quantiser_table_selector */
-        components:     {{1,1,1,0}, {2,1,1,1}, {3,1,1,1}},
-        num_components: 3,
+        .components =     {{1,1,1,0}, {2,1,1,1}, {3,1,1,1}},
+        .num_components = 3,
     };
 
     static const SliceParameter defaultSliceParameter = {
-        slice_data_size:                        0,
-        slice_data_offset:                      0,
-        slice_data_flag:                        VA_SLICE_DATA_FLAG_ALL,
-        slice_horizontal_position:              0,
-        slice_vertical_position:                0,
+        .slice_data_size =                        0,
+        .slice_data_offset =                      0,
+        .slice_data_flag =                        VA_SLICE_DATA_FLAG_ALL,
+        .slice_horizontal_position =              0,
+        .slice_vertical_position =                0,
 
         /* component_selector, dc_table_selector, ac_table_selector */
-        components: {{1,0,0},{2,1,1},{3,1,1}},
+        .components = {{1,0,0},{2,1,1},{3,1,1}},
 
-        num_components:                         3,
-        restart_interval:                       0,
-        num_mcus:                               4,
+        .num_components =                         3,
+        .restart_interval =                       0,
+        .num_mcus =                               4,
     };
 
     class PictureData
@@ -199,13 +199,13 @@ namespace Decode {
         {
             Shared pd(
                 new PictureData {
-                    slice: slice,
-                    sparam: sparam,
-                    pparam: pparam,
-                    huffman: huffman,
-                    iqmatrix: iqmatrix,
-                    format: 0,
-                    fourcc: fourcc,
+                    .slice = slice,
+                    .sparam = sparam,
+                    .pparam = pparam,
+                    .huffman = huffman,
+                    .iqmatrix = iqmatrix,
+                    .format = 0,
+                    .fourcc = fourcc,
                 }
             );
 
@@ -355,9 +355,9 @@ namespace Encode {
     static const VAEntrypoint entrypoint = VAEntrypointEncPicture;
 
     static const IQMatrix defaultIQMatrix = { /* Quality 50 */
-        load_lum_quantiser_matrix: 1,
-        load_chroma_quantiser_matrix: 1,
-        lum_quantiser_matrix: {
+        .load_lum_quantiser_matrix = 1,
+        .load_chroma_quantiser_matrix = 1,
+        .lum_quantiser_matrix = {
             0x10,0x0b,0x0c,0x0e,0x0c,0x0a,0x10,0x0e,
             0x0d,0x0e,0x12,0x11,0x10,0x13,0x18,0x28,
             0x1a,0x18,0x16,0x16,0x18,0x31,0x23,0x25,
@@ -367,7 +367,7 @@ namespace Encode {
             0x5f,0x62,0x67,0x68,0x67,0x3e,0x4d,0x71,
             0x79,0x70,0x64,0x78,0x5c,0x65,0x67,0x63,
         },
-        chroma_quantiser_matrix: {
+        .chroma_quantiser_matrix = {
             0x11,0x12,0x12,0x18,0x15,0x18,0x2f,0x1a,
             0x1a,0x2f,0x63,0x42,0x38,0x42,0x63,0x63,
             0x63,0x63,0x63,0x63,0x63,0x63,0x63,0x63,
@@ -383,24 +383,24 @@ namespace Encode {
         ::JPEG::Decode::defaultHuffmanTable;
 
     static const PictureParameter defaultPictureParameter = {
-        reconstructed_picture:      VA_INVALID_ID,
-        picture_width:              10,
-        picture_height:             10,
-        coded_buf:                  VA_INVALID_ID,
-        pic_flags:                  {value: 0x00100},
-        sample_bit_depth:           8,
-        num_scan:                   1,
-        num_components:             3,
-        component_id:               {0, 1, 2, 0},
-        quantiser_table_selector:   {0, 1, 1, 0},
-        quality:                    100,
+        .reconstructed_picture =      VA_INVALID_ID,
+        .picture_width =              10,
+        .picture_height =             10,
+        .coded_buf =                  VA_INVALID_ID,
+        .pic_flags =                  {.value = 0x00100},
+        .sample_bit_depth =           8,
+        .num_scan =                   1,
+        .num_components =             3,
+        .component_id =               {0, 1, 2, 0},
+        .quantiser_table_selector =   {0, 1, 1, 0},
+        .quality =                    100,
     };
 
     static const SliceParameter defaultSliceParameter = {
-        restart_interval:   0,
-        num_components:     3,
+        .restart_interval =   0,
+        .num_components =     3,
         /* component_selector, dc_table_selector, ac_table_selector */
-        components:         {{1,0,0},{2,1,1},{3,1,1}},
+        .components =         {{1,0,0},{2,1,1},{3,1,1}},
     };
 
     class TestInput
