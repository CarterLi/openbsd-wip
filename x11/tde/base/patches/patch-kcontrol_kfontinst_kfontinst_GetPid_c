$OpenBSD$
--- kcontrol/kfontinst/kfontinst/GetPid.c.orig	Sat Jul  7 20:34:53 2012
+++ kcontrol/kfontinst/kfontinst/GetPid.c	Sat Jul  7 20:36:27 2012
@@ -160,7 +160,7 @@ unsigned int kfi_getPid(const char *proc, unsigned int
     return error ? 0 : pid;
 }
 
-#elif defined OS_FreeBSD || defined OS_NetBSD || defined __FreeBSD__ || defined __NetBSD__ || defined OS_Darwin
+#elif defined OS_FreeBSD || defined OS_NetBSD || defined __FreeBSD__ || defined __NetBSD__ || defined OS_Darwin || defined __OpenBSD__
 
 #include <ctype.h>
 #include <dirent.h>
@@ -203,7 +203,7 @@ unsigned int kfi_getPid(const char *proc, unsigned int
 #elif defined(__DragonFly__) && __DragonFly_version >= 190000
         mib[3] = p[num].kp_pid;
 #else
-        mib[3] = p[num].kp_proc.p_pid;
+        mib[3] = p[num].p_pid;
 #endif
 
         len=sizeof(proc_p);
@@ -227,12 +227,12 @@ unsigned int kfi_getPid(const char *proc, unsigned int
 #if defined(__DragonFly__)
 	    if(proc_p.kp_eproc.e_ppid==ppid && p[num].kp_thread.td_comm && 0==strcmp(p[num].kp_thread.td_comm, proc))
 #else
-            if(proc_p.kp_eproc.e_ppid==ppid && p[num].kp_proc.p_comm && 0==strcmp(p[num].kp_proc.p_comm, proc))
+            if(proc_p.p_ppid==ppid && p[num].p_comm && 0==strcmp(p[num].p_comm, proc))
 #endif
                 if(pid)
                     error=true;
                 else
-                    pid=p[num].kp_proc.p_pid;
+                    pid=p[num].p_pid;
 #endif
         }
     }
