$OpenBSD$
--- kdecore/network/kresolver.cpp.orig	Thu Aug 11 04:30:14 2011
+++ kdecore/network/kresolver.cpp	Sat Jul  7 18:42:52 2012
@@ -616,6 +616,17 @@ TQStrList KResolver::protocolName(int protonum)
   pe = getprotobynumber(protonum);
 
 #else
+# ifdef USE_OPENBSD // OpenBSD uses an HP/IBM/DEC API
+  struct protoent protobuf;
+  struct protoent_data pdata;
+  ::memset(&pdata, 0, sizeof pdata);
+
+  if (getprotobynumber_r(protonum, &protobuf, &pdata) == 0)
+    pe = &protobuf;
+  else
+    pe = 0;
+
+# else
   size_t buflen = 1024;
   struct protoent protobuf;
   char *buf;
@@ -637,6 +648,7 @@ TQStrList KResolver::protocolName(int protonum)
     }
   while (pe == 0L);
 #endif
+#endif
 
   // Do common processing
   TQStrList lst(true);	// use deep copies
@@ -648,7 +660,9 @@ TQStrList KResolver::protocolName(int protonum)
     }
 
 #ifdef HAVE_GETPROTOBYNAME_R
+# ifndef USE_OPENBSD
   delete [] buf;
+# endif
 #endif
 
   return lst;
@@ -663,6 +677,16 @@ TQStrList KResolver::protocolName(const char *protonam
   pe = getprotobyname(protoname);
 
 #else
+# ifdef USE_OPENBSD // OpenBSD uses an HP/IBM/DEC API
+  struct protoent protobuf;
+  struct protoent_data pdata;
+  ::memset(&pdata, 0, sizeof pdata);
+
+  if (getprotobyname_r(protoname, &protobuf, &pdata) == 0)
+    pe = &protobuf;
+  else
+    pe = 0;
+# else
   size_t buflen = 1024;
   struct protoent protobuf;
   char *buf;
@@ -684,6 +708,7 @@ TQStrList KResolver::protocolName(const char *protonam
     }
   while (pe == 0L);
 #endif
+#endif
 
   // Do common processing
   TQStrList lst(true);	// use deep copies
@@ -695,7 +720,9 @@ TQStrList KResolver::protocolName(const char *protonam
     }
 
 #ifdef HAVE_GETPROTOBYNAME_R
+# ifndef USE_OPENBSD
   delete [] buf;
+# endif
 #endif
 
   return lst;
@@ -710,6 +737,17 @@ int KResolver::protocolNumber(const char *protoname)
   pe = getprotobyname(protoname);
 
 #else
+# ifdef USE_OPENBSD // OpenBSD uses an HP/IBM/DEC API
+  struct protoent protobuf;
+  struct protoent_data pdata;
+  ::memset(&pdata, 0, sizeof pdata);
+
+  if (getprotobyname_r(protoname, &protobuf, &pdata) == 0)
+    pe = &protobuf;
+  else
+    pe = 0;
+
+# else
   size_t buflen = 1024;
   struct protoent protobuf;
   char *buf;
@@ -731,6 +769,7 @@ int KResolver::protocolNumber(const char *protoname)
     }
   while (pe == 0L);
 #endif
+#endif
 
   // Do common processing
   int protonum = -1;
@@ -738,7 +777,9 @@ int KResolver::protocolNumber(const char *protoname)
     protonum = pe->p_proto;
 
 #ifdef HAVE_GETPROTOBYNAME_R
+# ifndef USE_OPENBSD
   delete [] buf;
+# endif
 #endif
 
   return protonum;
@@ -753,6 +794,16 @@ int KResolver::servicePort(const char *servname, const
   se = getservbyname(servname, protoname);
 
 #else
+# ifdef USE_OPENBSD // OpenBSD uses an HP/IBM/DEC API
+  struct servent servbuf;
+  struct servent_data sdata;
+  ::memset(&sdata, 0, sizeof sdata);
+  if (getservbyname_r(servname, protoname, &servbuf, &sdata) == 0)
+    se = &servbuf;
+  else
+    se = 0;
+
+# else
   size_t buflen = 1024;
   struct servent servbuf;
   char *buf;
@@ -774,6 +825,7 @@ int KResolver::servicePort(const char *servname, const
     }
   while (se == 0L);
 #endif
+#endif
 
   // Do common processing
   int servport = -1;
@@ -781,7 +833,9 @@ int KResolver::servicePort(const char *servname, const
     servport = ntohs(se->s_port);
 
 #ifdef HAVE_GETSERVBYNAME_R
+# ifndef USE_OPENBSD
   delete [] buf;
+# endif
 #endif
 
   return servport;
@@ -796,6 +850,16 @@ TQStrList KResolver::serviceName(const char* servname,
   se = getservbyname(servname, protoname);
 
 #else
+# ifdef USE_OPENBSD // OpenBSD uses an HP/IBM/DEC API
+  struct servent servbuf;
+  struct servent_data sdata;
+  ::memset(&sdata, 0, sizeof sdata);
+  if (getservbyname_r(servname, protoname, &servbuf, &sdata) == 0)
+    se = &servbuf;
+  else
+    se = 0;
+
+# else
   size_t buflen = 1024;
   struct servent servbuf;
   char *buf;
@@ -817,6 +881,7 @@ TQStrList KResolver::serviceName(const char* servname,
     }
   while (se == 0L);
 #endif
+#endif
 
   // Do common processing
   TQStrList lst(true);	// use deep copies
@@ -828,7 +893,9 @@ TQStrList KResolver::serviceName(const char* servname,
     }
 
 #ifdef HAVE_GETSERVBYNAME_R
+# ifndef USE_OPENBSD
   delete [] buf;
+# endif
 #endif
 
   return lst;
@@ -843,6 +910,16 @@ TQStrList KResolver::serviceName(int port, const char 
   se = getservbyport(port, protoname);
 
 #else
+# ifdef USE_OPENBSD // OpenBSD uses an HP/IBM/DEC API
+  struct servent servbuf;
+  struct servent_data sdata;
+  ::memset(&sdata, 0, sizeof sdata);
+  if (getservbyport_r(port, protoname, &servbuf, &sdata) == 0)
+    se = &servbuf;
+  else
+    se = 0;
+
+# else
   size_t buflen = 1024;
   struct servent servbuf;
   char *buf;
@@ -864,6 +941,7 @@ TQStrList KResolver::serviceName(int port, const char 
     }
   while (se == 0L);
 #endif
+#endif
 
   // Do common processing
   TQStrList lst(true);	// use deep copies
@@ -875,7 +953,9 @@ TQStrList KResolver::serviceName(int port, const char 
     }
 
 #ifdef HAVE_GETSERVBYPORT_R
+# ifndef USE_OPENBSD
   delete [] buf;
+# endif
 #endif
 
   return lst;
