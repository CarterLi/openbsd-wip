$OpenBSD$

Adds compatibility with libpng 1.6.

https://github.com/plt/racket/commit/5629a6156a5720e51a277849f75b3135cb93664f

https://github.com/plt/racket/commit/f97a7cf1778b74e9f38d97db61e91956565180c3

--- collects/racket/draw/unsafe/png.rkt.orig	Mon Jun 17 01:08:56 2013
+++ collects/racket/draw/unsafe/png.rkt	Mon Jun 17 01:10:41 2013
@@ -10,11 +10,14 @@
   [(unix)
    ;; Most Linux distros supply "libpng12", while other Unix
    ;; variants often have just "libpng", etc.
-   (ffi-lib "libpng15" '("15" "")
-	    #:fail (lambda ()
-		     (ffi-lib "libpng12" '("0" "")
-			      #:fail (lambda ()
-				       (ffi-lib "libpng")))))]
+   (let loop ([alts '(("libpng16" ("16" ""))
+                      ("libpng15" ("15" ""))
+                      ("libpng12" ("0" "")))])
+     (cond
+      [(null? alts) (ffi-lib "libpng")]
+      [else (apply ffi-lib (car alts)
+                   #:fail (lambda ()
+                            (loop (cdr alts))))]))]
   [(macosx) (ffi-lib "libpng15.15.dylib")]
   [(windows)
    (ffi-lib "zlib1.dll")
@@ -29,9 +32,12 @@
 ;;  assume that other versions are also ok
 (define PNG_LIBPNG_VER_STRING (string->bytes/latin-1
                                (let ([v (png_access_version_number)])
-                                 (format "~s.~s"
+                                 (format "~s.~s~a"
                                          (quotient v 10000)
-                                         (quotient (remainder v 10000) 100)))))
+                                         (quotient (remainder v 10000) 100)
+                                         (if (zero? (remainder v 100))
+                                             ""
+                                             (format ".~a" (remainder v 100)))))))
 
 (define _png_structp (_cpointer 'png_structp))
 (define _png_infop (_cpointer 'png_infop))
