$OpenBSD$
--- src/libstd/dynamic_lib.rs.orig	Wed Jan 21 14:18:11 2015
+++ src/libstd/dynamic_lib.rs	Fri Jan 23 06:43:31 2015
@@ -180,7 +180,8 @@ mod test {
     #[cfg(any(target_os = "linux",
               target_os = "macos",
               target_os = "freebsd",
-              target_os = "dragonfly"))]
+              target_os = "dragonfly",
+              target_os = "openbsd"))]
     fn test_errors_do_not_crash() {
         // Open /dev/null as a library to get an error, and make sure
         // that only causes an error, and not a crash.
@@ -197,7 +198,8 @@ mod test {
           target_os = "macos",
           target_os = "ios",
           target_os = "freebsd",
-          target_os = "dragonfly"))]
+          target_os = "dragonfly",
+          target_os = "openbsd"))]
 pub mod dl {
     pub use self::Rtld::*;
     use prelude::v1::*;
@@ -257,7 +259,18 @@ pub mod dl {
         Local = 0,
     }
 
+    #[cfg(not(target_os = "openbsd"))]
     #[link_name = "dl"]
+    extern {
+        fn dlopen(filename: *const libc::c_char,
+                  flag: libc::c_int) -> *mut libc::c_void;
+        fn dlerror() -> *mut libc::c_char;
+        fn dlsym(handle: *mut libc::c_void,
+                 symbol: *const libc::c_char) -> *mut libc::c_void;
+        fn dlclose(handle: *mut libc::c_void) -> libc::c_int;
+    }
+
+    #[cfg(target_os = "openbsd")]
     extern {
         fn dlopen(filename: *const libc::c_char,
                   flag: libc::c_int) -> *mut libc::c_void;
