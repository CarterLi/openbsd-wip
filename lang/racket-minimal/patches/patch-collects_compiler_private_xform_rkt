$OpenBSD$

"avoid some C undefined behavior"
https://github.com/racket/racket/commit/9a8fd2912f8bc15c3e2a81344fc113ac31df4304

"xform: better reporting for disallowed call"
https://github.com/racket/racket/commit/18990701a69d6705e9c7c56be5e858ea6e821f9f

"xform: recognize some floating-point intrinsics"
https://github.com/racket/racket/commit/c1b9cd6828ad7022158c68ebbf45ab8d0fe0202c

"xform: more 'signbit' variants"
https://github.com/racket/racket/commit/f21aa8661bd5e97ef100f75042e2280158fe9179

--- collects/compiler/private/xform.rkt.orig	Tue Feb  9 23:35:10 2016
+++ collects/compiler/private/xform.rkt	Tue Feb  9 23:35:18 2016
@@ -898,12 +898,13 @@
                __get_errno_ptr ; QNX preprocesses errno to __get_errno_ptr
                __getreent ; Cygwin
 
-               strlen cos cosl sin sinl exp expl pow powl log logl sqrt sqrtl atan2 atan2l
-               isnan isinf fpclass _fpclass __fpclassify __fpclassifyf __fpclassifyl
-	       _isnan __isfinited __isnanl __isnan
+               strlen cos cosl sin sinl exp expl pow powl log logl sqrt sqrtl atan2 atan2l frexp
+               isnan isinf fpclass signbit _signbit _fpclass __fpclassify __fpclassifyf __fpclassifyl
+	       _isnan __isfinited __isnanl __isnan __signbit __signbitf __signbitd __signbitl
                __isinff __isinfl isnanf isinff __isinfd __isnanf __isnand __isinf
-               __inline_isnanl __inline_isnan
-               __builtin_popcount __builtin_clz
+               __inline_isnanl __inline_isnan __inline_signbitf __inline_signbitd __inline_signbitl
+               __builtin_popcount __builtin_clz __builtin_isnan __builtin_isinf __builtin_signbit
+               __builtin_signbitf __builtin_signbitd __builtin_signbitl __builtin_isinf_sign
                _Generic
                __inline_isinff __inline_isinfl __inline_isinfd __inline_isnanf __inline_isnand __inline_isinf
                floor floorl ceil ceill round roundl fmod fmodl modf modfl fabs fabsl __maskrune _errno __errno
@@ -2542,9 +2543,10 @@
                                               type)))])
 		 (if (hash-ref non-gcing-functions name (lambda () #f))
 		     (when saw-gcing-call
-		       (log-error "[GCING] ~a in ~a: Function ~a declared __xform_nongcing__, but includes a function call."
+		       (log-error "[GCING] ~a in ~a: Function ~a declared __xform_nongcing__, but includes a function call at ~s."
 				  (tok-line saw-gcing-call) (tok-file saw-gcing-call)
-				  name))
+				  name
+                                  (tok-n saw-gcing-call)))
 		     (unless saw-gcing-call
 		       '
 		       (eprintf "[SUGGEST] Consider declaring ~a as __xform_nongcing__.\n"
@@ -3580,7 +3582,7 @@
 						   (list->seq (append func (list args))))
 						  ;; Call with pointer pushes
 						  (begin
-						    (set! saw-gcing-call (car e-))
+						    (set! saw-gcing-call (car func))
 						    (make-call
 						     "func call"
 						     #f #f
