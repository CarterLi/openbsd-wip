$OpenBSD$

Index: runtime/druntime/src/core/stdc/stdio.d
--- runtime/druntime/src/core/stdc/stdio.d.orig
+++ runtime/druntime/src/core/stdc/stdio.d
@@ -25,6 +25,10 @@ private
   {
     import core.sys.posix.sys.types;
   }
+  else version (OpenBSD)
+  {
+    import core.sys.posix.sys.types;
+  }
 }
 
 extern (C):
@@ -166,6 +170,36 @@ else version ( FreeBSD )
         long        _mbstateL;
     }
 }
+else version ( OpenBSD )
+{
+    enum
+    {
+        ///
+        BUFSIZ       = 1024,
+        ///
+        EOF          = -1,
+        ///
+        FOPEN_MAX    = 20,
+        ///
+        FILENAME_MAX = 1024,
+        ///
+        TMP_MAX      = 308915776,
+        ///
+        L_tmpnam     = 1024
+    }
+
+    struct __sbuf
+    {
+        ubyte *_base;
+        int _size;
+    }
+
+    union __mbstate_t // <sys/_types.h>
+    {
+        char[128]   _mbstate8;
+        long        _mbstateL;
+    }
+}
 else version (Solaris)
 {
     enum
@@ -409,6 +443,52 @@ else version( FreeBSD )
     ///
     alias shared(__sFILE) FILE;
 }
+else version( OpenBSD )
+{
+    ///
+    alias off_t fpos_t;
+
+    ///
+    struct __sFILE
+    {
+        ubyte*          _p;
+        int             _r;
+        int             _w;
+        short           _flags;
+        short           _file;
+        __sbuf          _bf;
+        int             _lbfsize;
+
+        void*           _cookie;
+        int     function(void*)                 _close;
+        int     function(void*, char*, int)     _read;
+        fpos_t  function(void*, fpos_t, int)    _seek;
+        int     function(void*, in char*, int)  _write;
+
+        __sbuf          _ub;
+        ubyte*          _up;
+        int             _ur;
+
+        ubyte[3]        _ubuf;
+        ubyte[1]        _nbuf;
+
+        __sbuf          _lb;
+
+        int             _blksize;
+        fpos_t          _offset;
+
+        pthread_mutex_t _fl_mutex;
+        pthread_t       _fl_owner;
+        int             _fl_count;
+        int             _orientation;
+        __mbstate_t     _mbstate;
+    }
+
+    ///
+    alias __sFILE _iobuf;
+    ///
+    alias shared(__sFILE) FILE;
+}
 else version (Solaris)
 {
     import core.stdc.wchar_ : __mbstate_t;
@@ -695,6 +775,29 @@ else version( FreeBSD )
     ///
     alias __stderrp stderr;
 }
+else version( OpenBSD )
+{
+    enum
+    {
+        ///
+        _IOFBF = 0,
+        ///
+        _IOLBF = 1,
+        ///
+        _IONBF = 2,
+    }
+
+    private extern shared FILE* __stdinp;
+    private extern shared FILE* __stdoutp;
+    private extern shared FILE* __stderrp;
+
+    ///
+    alias __stdinp  stdin;
+    ///
+    alias __stdoutp stdout;
+    ///
+    alias __stderrp stderr;
+}
 else version (Solaris)
 {
     enum
@@ -974,6 +1077,28 @@ else version( OSX )
     int  vsnprintf(char* s, size_t n, in char* format, va_list arg);
 }
 else version( FreeBSD )
+{
+  // No unsafe pointer manipulation.
+  @trusted
+  {
+      ///
+    void rewind(FILE*);
+    ///
+    pure void clearerr(FILE*);
+    ///
+    pure int  feof(FILE*);
+    ///
+    pure int  ferror(FILE*);
+    ///
+    int  fileno(FILE*);
+  }
+
+  ///
+    int  snprintf(char* s, size_t n, in char* format, ...);
+    ///
+    int  vsnprintf(char* s, size_t n, in char* format, va_list arg);
+}
+else version( OpenBSD )
 {
   // No unsafe pointer manipulation.
   @trusted
