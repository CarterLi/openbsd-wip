$OpenBSD$

Override the built-in linker

Index: tccelf.c
--- tccelf.c.orig
+++ tccelf.c
@@ -2507,7 +2507,7 @@ static Section *create_bsd_note_section(TCCState *s1,
 
 /* Output an elf, coff or binary file */
 /* XXX: suppress unneeded sections */
-static int elf_output_file(TCCState *s1, const char *filename)
+static int elf_output_file(TCCState *s1, const char *filename, char **argv0)
 {
     int i, ret, phnum, phfill, shnum, file_type, file_offset, *sec_order;
     struct dyn_inf dyninf = {0};
@@ -2541,6 +2541,17 @@ static int elf_output_file(TCCState *s1, const char *f
 #ifndef ELF_OBJ_ONLY
     if (file_type != TCC_OUTPUT_OBJ) {
         /* if linking, also link in runtime libraries (libc, libgcc, etc.) */
+
+	char cmd[4096];
+	snprintf(cmd, sizeof(cmd), "cc ");
+	for (int i = 1; argv0[i] != NULL; i++) {
+		char cmd2[4096];
+		snprintf(cmd2, sizeof(cmd2), "%s ", argv0[i]);
+		strlcat(cmd, cmd2, sizeof(cmd));
+	}
+	strlcat(cmd, "LOCALBASE/lib/tcc/libtcc1.a", sizeof(cmd));
+	exit(system(cmd));
+
         tcc_add_runtime(s1);
 	resolve_common_syms(s1);
 
@@ -2718,7 +2729,7 @@ static int elf_output_file(TCCState *s1, const char *f
     return ret;
 }
 
-LIBTCCAPI int tcc_output_file(TCCState *s, const char *filename)
+LIBTCCAPI int tcc_output_file(TCCState *s, const char *filename, char **argv0)
 {
     int ret;
 #ifdef TCC_TARGET_PE
@@ -2730,7 +2741,7 @@ LIBTCCAPI int tcc_output_file(TCCState *s, const char 
         ret = macho_output_file(s, filename);
     } else
 #endif
-        ret = elf_output_file(s, filename);
+        ret = elf_output_file(s, filename, argv0);
     return ret;
 }
 
