$OpenBSD: patch-src_test_pl,v 1.3 2014/04/04 17:53:49 edd Exp $

Turn on verbose reporting.

One of the GMP tests deliberatley maxes out the stack to test the backtrace
support, but it seems to be broken.

https://github.com/SWI-Prolog/issues/issues/43

Index: src/test.pl
--- src/test.pl.orig
+++ src/test.pl
@@ -36,6 +36,7 @@
 %:- set_prolog_flag(optimise, true).
 :- set_prolog_flag(optimise_debug, false).
 %:- set_prolog_flag(trace_gc, true).
+:- set_prolog_flag(verbose, normal).
 :- asserta(user:file_search_path(library, '../packages/plunit')).
 :- [library(plunit)].
 :- set_test_options([load(always), silent(true), sto(true), cleanup(true)]).
@@ -606,10 +607,10 @@ gmp(shift-1) :-
 gmp(shift-2) :-
 	A is 1<<55, B is A<<8,
 	B =:= 9223372036854775808.
-gmp(shift-3) :-
-	unbound(A),
-	forall(between(1, 100, X),
-	       catch(A is 1<<(1<<X), error(resource_error(stack), _), true)).
+%gmp(shift-3) :-
+%	unbound(A),
+%	forall(between(1, 100, X),
+%	       catch(A is 1<<(1<<X), error(resource_error(stack), _), true)).
 gmp(fac-1) :-
 	fac(25, X),
 	X == 15511210043330985984000000. % computed with bc
@@ -756,10 +757,10 @@ gmp(fmtf-1) :-
 gmp(random) :-
 	A is random((1<<200)-((1<<200)-20)),
 	A < 20.
-gmp(length) :-
-	N is 1<<66,
-	catch(length(_L, N), Error, true),
-	Error = error(resource_error(stack), global).
+%gmp(length) :-
+%	N is 1<<66,
+%	catch(length(_L, N), Error, true),
+%	Error = error(resource_error(stack), global).
 gmp(ar_add_ui) :-			% check realloc of gmp number
 	A = 1000000000000000000000,
 	X is A+1,
