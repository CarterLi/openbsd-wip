$OpenBSD$
--- test/test_memory_leaks.py.orig	Mon Apr 30 00:03:11 2012
+++ test/test_memory_leaks.py	Sun Apr 29 09:49:59 2012
@@ -17,10 +17,11 @@ import gc
 import unittest
 import time
 import socket
+import sys
 
 import psutil
 from test_psutil import reap_children, skipUnless, skipIf, supports_ipv6, \
-                        POSIX, LINUX, WINDOWS, OSX, BSD, PY3
+                        POSIX, LINUX, WINDOWS, OSX, BSD, OPENBSD, PY3
 
 LOOPS = 1000
 TOLERANCE = 4096
@@ -37,7 +38,9 @@ class Base(unittest.TestCase):
 
     def execute(self, function, *args, **kwargs):
         # step 1
+        # sys.stderr.write("{} {} {} XXX\n".format(function, args, kwargs))
         for x in xrange(LOOPS):
+            # sys.stderr.write("{} {} {} XXX\n".format(x, function, args, kwargs))
             self.call(function, *args, **kwargs)
         del x
         gc.collect()
@@ -126,6 +129,7 @@ class TestProcessObjectLeaks(Base):
     def test_get_num_threads(self):
         self.execute('get_num_threads')
 
+    @skipIf(OPENBSD)
     def test_get_threads(self):
         self.execute('get_threads')
 
