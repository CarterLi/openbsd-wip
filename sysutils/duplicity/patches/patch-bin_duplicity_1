$OpenBSD: patch-bin_duplicity_1,v 1.2 2014/11/14 07:49:33 brad Exp $
Document the ssh backend change from paramiko to pexpect.
--- bin/duplicity.1.orig	Sun Aug  2 11:35:45 2015
+++ bin/duplicity.1	Tue Sep  1 20:34:04 2015
@@ -1137,9 +1137,9 @@ scp://.. or
 .br
 sftp://user[:password]@other.host[:port]/[relative|/absolute]_path
 .PP
-.BR "defaults" " are paramiko+scp:// and paramiko+sftp://"
+.BR "defaults" " are pexpect+scp://, pexpect+sftp://, lftp+sftp://"
 .br
-.BR "alternatively" " try pexpect+scp://, pexpect+sftp://, lftp+sftp://"
+.BR "alternatively" " try paramiko+scp:// and paramiko+sftp://"
 .br
 See also
 .BR --ssh-askpass ,
@@ -1750,7 +1750,7 @@ about the requirements for a server to support
 .I scp/ssh
 access.
 To make it even more confusing the user can choose between several ssh backends via a scheme prefix:
-paramiko+ (default), pexpect+, lftp+... .
+paramiko+, pexpect+ (default), lftp+... .
 .br
 paramiko & pexpect support
 .BR --use-scp ,
@@ -1762,7 +1762,7 @@ backend allows to define
 .BR --scp-command " and"
 .BR --sftp-command .
 .PP
-.BR "SSH paramiko backend " "(default)"
+.BR "SSH paramiko backend"
 is a complete reimplementation of ssh protocols natively in python. Advantages
 are speed and maintainability. Minor disadvantage is that extra packages are
 needed as listed in
@@ -1775,7 +1775,7 @@ mode (
 .I --use-scp
 ) though scp access is used for put/get operations but listing is done via ssh remote shell.
 .PP
-.B SSH pexpect backend
+.BR "SSH pexpect backend" " (selected by default on OpenBSD)"
 is the legacy ssh backend using the command line ssh binaries via pexpect.
 Older versions used
 .I scp
@@ -2036,7 +2036,7 @@ see pydrive backend
 (Python Cryptography Toolkit)
 - http://www.dlitz.net/software/pycrypto/
 .TP
-.B ssh pexpect backend
+.BR "ssh pexpect backend" " (default on OpenBSD)"
 .B sftp/scp client binaries
 OpenSSH - http://www.openssh.com/
 .br
